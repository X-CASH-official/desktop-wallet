(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('angular-highcharts-chart', ['exports', '@angular/core'], factory) :
    (factory((global['angular-highcharts-chart'] = {}),global.ng.core));
}(this, (function (exports,core) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var AngularHighchartsChartComponent = (function () {
        function AngularHighchartsChartComponent(el) {
            this.el = el;
            this.updateValue = false;
            this.updateChange = new core.EventEmitter(true);
            this.updateOrCreateChart = function () {
                if (this.chart && this.chart.update) {
                    this.chart.update(this.optionsValue, true, this.oneToOne || false);
                }
                else {
                    this.chart = this.Highcharts[this.constructorType || 'chart'](this.el.nativeElement, this.optionsValue, this.callbackFunction || null);
                    this.optionsValue.series = this.chart.userOptions.series;
                }
            };
        }
        Object.defineProperty(AngularHighchartsChartComponent.prototype, "options", {
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                this.optionsValue = val;
                this.updateOrCreateChart();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AngularHighchartsChartComponent.prototype, "update", {
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                if (val) {
                    this.updateOrCreateChart();
                    this.updateChange.emit(false); // clear the flag after update
                }
            },
            enumerable: true,
            configurable: true
        });
        AngularHighchartsChartComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'lib-highcharts-angular',
                        template: ''
                    },] },
        ];
        /** @nocollapse */
        AngularHighchartsChartComponent.ctorParameters = function () {
            return [
                { type: core.ElementRef }
            ];
        };
        AngularHighchartsChartComponent.propDecorators = {
            Highcharts: [{ type: core.Input }],
            constructorType: [{ type: core.Input }],
            callbackFunction: [{ type: core.Input }],
            options: [{ type: core.Input }],
            updateChange: [{ type: core.Output }],
            update: [{ type: core.Input }],
            oneToOne: [{ type: core.Input }]
        };
        return AngularHighchartsChartComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var AngularHighchartsChartModule = (function () {
        function AngularHighchartsChartModule() {
        }
        AngularHighchartsChartModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [],
                        declarations: [AngularHighchartsChartComponent],
                        exports: [AngularHighchartsChartComponent]
                    },] },
        ];
        return AngularHighchartsChartModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    // export * from './lib/angular-highcharts-chart.component';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.AngularHighchartsChartModule = AngularHighchartsChartModule;
    exports.Éµa = AngularHighchartsChartComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1oaWdoY2hhcnRzLWNoYXJ0LnVtZC5qcy5tYXAiLCJzb3VyY2VzIjpbIm5nOi8vYW5ndWxhci1oaWdoY2hhcnRzLWNoYXJ0L2xpYi9hbmd1bGFyLWhpZ2hjaGFydHMtY2hhcnQuY29tcG9uZW50LnRzIiwibmc6Ly9hbmd1bGFyLWhpZ2hjaGFydHMtY2hhcnQvbGliL2FuZ3VsYXItaGlnaGNoYXJ0cy1jaGFydC5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLWhpZ2hjaGFydHMtYW5ndWxhcicsXG4gIHRlbXBsYXRlOiAnJ1xufSlcblxuZXhwb3J0IGNsYXNzIEFuZ3VsYXJIaWdoY2hhcnRzQ2hhcnRDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmKSB7IH1cblxuICBjaGFydDogYW55O1xuICBASW5wdXQoKSBIaWdoY2hhcnRzOiBhbnk7XG4gIEBJbnB1dCgpIGNvbnN0cnVjdG9yVHlwZTogc3RyaW5nO1xuICBASW5wdXQoKSBjYWxsYmFja0Z1bmN0aW9uOiBhbnk7XG4gIG9wdGlvbnNWYWx1ZTogYW55O1xuICBASW5wdXQoKVxuICBzZXQgb3B0aW9ucyh2YWwpIHtcbiAgICB0aGlzLm9wdGlvbnNWYWx1ZSA9IHZhbDtcbiAgICB0aGlzLnVwZGF0ZU9yQ3JlYXRlQ2hhcnQoKTtcbiAgfVxuICB1cGRhdGVWYWx1ZSA9IGZhbHNlO1xuICBAT3V0cHV0KCkgdXBkYXRlQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcih0cnVlKTtcbiAgQElucHV0KCkgc2V0IHVwZGF0ZSh2YWwpIHtcbiAgICBpZiAodmFsKSB7XG4gICAgICB0aGlzLnVwZGF0ZU9yQ3JlYXRlQ2hhcnQoKTtcbiAgICAgIHRoaXMudXBkYXRlQ2hhbmdlLmVtaXQoZmFsc2UpOyAvLyBjbGVhciB0aGUgZmxhZyBhZnRlciB1cGRhdGVcbiAgICB9XG4gIH1cbiAgQElucHV0KCkgb25lVG9PbmU6IGJvb2xlYW47XG5cbiAgdXBkYXRlT3JDcmVhdGVDaGFydCA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5jaGFydCAmJiB0aGlzLmNoYXJ0LnVwZGF0ZSkge1xuICAgICAgdGhpcy5jaGFydC51cGRhdGUodGhpcy5vcHRpb25zVmFsdWUsIHRydWUsIHRoaXMub25lVG9PbmUgfHwgZmFsc2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNoYXJ0ID0gdGhpcy5IaWdoY2hhcnRzW3RoaXMuY29uc3RydWN0b3JUeXBlIHx8ICdjaGFydCddKFxuICAgICAgICB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsXG4gICAgICAgIHRoaXMub3B0aW9uc1ZhbHVlLFxuICAgICAgICB0aGlzLmNhbGxiYWNrRnVuY3Rpb24gfHwgbnVsbFxuICAgICAgKTtcbiAgICAgIHRoaXMub3B0aW9uc1ZhbHVlLnNlcmllcyA9IHRoaXMuY2hhcnQudXNlck9wdGlvbnMuc2VyaWVzO1xuICAgIH1cbiAgfTtcbn1cbiIsImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmd1bGFySGlnaGNoYXJ0c0NoYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi9hbmd1bGFyLWhpZ2hjaGFydHMtY2hhcnQuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtBbmd1bGFySGlnaGNoYXJ0c0NoYXJ0Q29tcG9uZW50XSxcbiAgZXhwb3J0czogW0FuZ3VsYXJIaWdoY2hhcnRzQ2hhcnRDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIEFuZ3VsYXJIaWdoY2hhcnRzQ2hhcnRNb2R1bGUgeyB9XG4iXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIiwiQ29tcG9uZW50IiwiRWxlbWVudFJlZiIsIklucHV0IiwiT3V0cHV0IiwiTmdNb2R1bGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtRQVFFLHlDQUFvQixFQUFjO1lBQWQsT0FBRSxHQUFGLEVBQUUsQ0FBWTsrQkFZcEIsS0FBSztnQ0FDTSxJQUFJQSxpQkFBWSxDQUFDLElBQUksQ0FBQzt1Q0FTekI7Z0JBQ3BCLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRTtvQkFDbkMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsSUFBSSxLQUFLLENBQUMsQ0FBQztpQkFDcEU7cUJBQU07b0JBQ0wsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxlQUFlLElBQUksT0FBTyxDQUFDLENBQzNELElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUNyQixJQUFJLENBQUMsWUFBWSxFQUNqQixJQUFJLENBQUMsZ0JBQWdCLElBQUksSUFBSSxDQUM5QixDQUFDO29CQUNGLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQztpQkFDMUQ7YUFDRjtTQWpDc0M7UUFPdkMsc0JBQ0ksb0RBQU87Ozs7Z0JBRFgsVUFDWSxHQUFHO2dCQUNiLElBQUksQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDO2dCQUN4QixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQzthQUM1Qjs7O1dBQUE7UUFHRCxzQkFBYSxtREFBTTs7OztnQkFBbkIsVUFBb0IsR0FBRztnQkFDckIsSUFBSSxHQUFHLEVBQUU7b0JBQ1AsSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUM7b0JBQzNCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2lCQUMvQjthQUNGOzs7V0FBQTs7b0JBekJGQyxjQUFTLFNBQUM7d0JBQ1QsUUFBUSxFQUFFLHdCQUF3Qjt3QkFDbEMsUUFBUSxFQUFFLEVBQUU7cUJBQ2I7Ozs7O3dCQUxtQkMsZUFBVTs7OztpQ0FXM0JDLFVBQUs7c0NBQ0xBLFVBQUs7dUNBQ0xBLFVBQUs7OEJBRUxBLFVBQUs7bUNBTUxDLFdBQU07NkJBQ05ELFVBQUs7K0JBTUxBLFVBQUs7OzhDQTVCUjs7Ozs7OztBQ0FBOzs7O29CQUdDRSxhQUFRLFNBQUM7d0JBQ1IsT0FBTyxFQUFFLEVBQ1I7d0JBQ0QsWUFBWSxFQUFFLENBQUMsK0JBQStCLENBQUM7d0JBQy9DLE9BQU8sRUFBRSxDQUFDLCtCQUErQixDQUFDO3FCQUMzQzs7MkNBUkQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=