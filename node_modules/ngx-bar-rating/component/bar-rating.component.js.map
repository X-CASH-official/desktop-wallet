{"version":3,"sources":["../inlined/component/bar-rating.component.ts"],"names":[],"mappings":"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","file":"bar-rating.component.js","sourceRoot":"","sourcesContent":["import {\n  Component, Input, Output, ChangeDetectionStrategy, EventEmitter, forwardRef, OnInit, SimpleChanges, OnChanges,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from '@angular/forms';\n\n/** This allows support [(ngModel)] and ngControl. */\nconst RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => BarRatingComponent),\n  multi: true\n};\n\n/** This allows control required validation. */\nconst RATING_VALUE_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => BarRatingComponent),\n  multi: true,\n};\n\n\nexport class BarRatingComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\n\n  contexts = [];\n  nextRate: number;\n  disabled: boolean;\n\n  /** Current rating. Can be a decimal value like 3.14 */\n   rate;\n\n  /** Maximal rating that can be given using this widget. */\n   max = 5;\n\n  /** A flag indicating if rating can be updated. */\n   readOnly = false;\n\n  /** Set the theme */\n   theme = 'default';\n\n  /** Show rating title */\n   showText = false;\n\n  /** Replace rate value with a title */\n   titles = [];\n\n  /** A flag indicating if rating is required for form validation. */\n   required = false;\n\n  /** An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over. */\n   hover = new EventEmitter<number>();\n\n  /** An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over. */\n   leave = new EventEmitter<number>();\n\n  /** An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating. */\n   rateChange = new EventEmitter<number>(true);\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit() {\n    this.contexts = Array.from({ length: this.max }, (context, i) => ({\n      selected: false,\n      fraction: false,\n      click: (e) => this.handleClick(e, i + 1),\n      enter: () => this.handleEnter(i + 1)\n    }));\n\n    this.updateState(this.rate);\n  }\n\n  update(newRate: number, internalChange = true): void {\n    if (!this.readOnly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this.updateState(this.rate);\n  }\n\n  /** Reset rate value */\n  reset() {\n    this.leave.emit(this.nextRate);\n    this.updateState(this.rate);\n  }\n\n  private updateState(nextValue) {\n    /** Set rate value as text */\n    this.nextRate = nextValue - 1;\n    /** Set the rating */\n    this.contexts = Array.from({ length: this.max }, (context, index) => ({\n      selected: index + 1 <= nextValue,\n      fraction: (index + 1 === Math.round(nextValue) && nextValue % 1) >= 0.5,\n      click: (e) => this.handleClick(e, index),\n      enter: () => this.handleEnter(index)\n    }));\n  }\n\n  private handleClick(e, value) {\n    /** (NOT TESTED) Remove 300ms click delay on touch devices */\n    e.preventDefault();\n    e.stopPropagation();\n    this.update(value + 1);\n  }\n\n  private handleEnter(index) {\n    if (!this.disabled && !this.readOnly) {\n      /** Add selected class for rating hover */\n      this.contexts.map((context, i) => {\n        context.active = i <= index;\n        context.fraction = false;\n        context.selected = false;\n      });\n      this.nextRate = index;\n      this.hover.emit(index);\n    }\n  }\n\n  /** This is the initial value set to the component */\n  writeValue(value: number) {\n    this.update(value, false);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  validate(c: FormControl) {\n    return (this.required && !c.value) ? { required: true } : null;\n  }\n\n  onChange = (_: any) => { };\n  onTouched = () => { };\n\n  registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bar-rating',\n  template: \"\\n    <div [class]=\\\"'br br-' + theme\\\" [class.br-readonly]=\\\"readOnly\\\" [class.br-disabled]=\\\"disabled\\\">\\n\\n      <div class=\\\"br-units\\\" (mouseleave)=\\\"reset()\\\">\\n\\n        <div class=\\\"br-unit\\\" *ngFor=\\\"let unit of contexts\\\" [class.br-fraction]=\\\"unit.fraction\\\"\\n            [class.br-selected]=\\\"unit.selected\\\" [class.br-active]=\\\"unit.active\\\"\\n            (click)=\\\"unit.click($event)\\\" (mouseenter)=\\\"unit.enter()\\\"></div>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"showText\\\" class=\\\"br-text\\\">{{ nextRate | rateTitle: titles}}</div>\\n    </div>\\n  \",\n  styles: [\"\\n    *{box-sizing:border-box}.br{position:relative;margin:15px 0}.br-units{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.br-unit{cursor:pointer;-webkit-font-smoothing:antialiased;text-rendering:auto}.br-disabled .br-unit,.br-readonly .br-unit{cursor:default}\\n  \"],\n  providers: [RATING_VALUE_ACCESSOR, RATING_VALUE_VALIDATOR],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'rate': [{ type: Input },],\n'max': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'theme': [{ type: Input },],\n'showText': [{ type: Input },],\n'titles': [{ type: Input },],\n'required': [{ type: Input },],\n'hover': [{ type: Output },],\n'leave': [{ type: Output },],\n'rateChange': [{ type: Output },],\n};\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}