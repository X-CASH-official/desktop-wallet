import { Component, Output, EventEmitter, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
const actions = {
    bold: {
        icon: '<b>B</b>',
        title: 'Bold',
        result: () => exec('bold')
    },
    italic: {
        icon: '<i>I</i>',
        title: 'Italic',
        result: () => exec('italic')
    },
    underline: {
        icon: '<u>U</u>',
        title: 'Underline',
        result: () => exec('underline')
    },
    strikethrough: {
        icon: '<strike>S</strike>',
        title: 'Strike-through',
        result: () => exec('strikeThrough')
    },
    heading1: {
        icon: '<b>H<sub>1</sub></b>',
        title: 'Heading 1',
        result: () => exec('formatBlock', '<H1>')
    },
    heading2: {
        icon: '<b>H<sub>2</sub></b>',
        title: 'Heading 2',
        result: () => exec('formatBlock', '<H2>')
    },
    paragraph: {
        icon: '&#182;',
        title: 'Paragraph',
        result: () => exec('formatBlock', '<P>')
    },
    quote: {
        icon: '&#8220; &#8221;',
        title: 'Quote',
        result: () => exec('formatBlock', '<BLOCKQUOTE>')
    },
    olist: {
        icon: '&#35;',
        title: 'Ordered List',
        result: () => exec('insertOrderedList')
    },
    ulist: {
        icon: '&#8226;',
        title: 'Unordered List',
        result: () => exec('insertUnorderedList')
    },
    code: {
        icon: '&lt;/&gt;',
        title: 'Code',
        result: () => exec('formatBlock', '<PRE>')
    },
    line: {
        icon: '&#8213;',
        title: 'Horizontal Line',
        result: () => exec('insertHorizontalRule')
    },
    link: {
        icon: '&#128279;',
        title: 'Link',
        result: () => {
            const /** @type {?} */ url = window.prompt('Enter the link URL');
            if (url)
                exec('createLink', url);
        }
    },
    image: {
        icon: '&#128247;',
        title: 'Image',
        result: () => {
            const /** @type {?} */ url = window.prompt('Enter the image URL');
            if (url)
                exec('insertImage', url);
        }
    }
};
const exec = (command, value = null) => {
    document.execCommand(command, false, value);
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class PellComponent {
    constructor() {
        this.actions = Object.keys(actions).map(action => actions[action]);
        this.actionBarClass = 'pell-actionbar';
        this.actionButtonClass = 'pell-button';
        this.contentClass = 'pell-content';
        this.onChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onInput(event) {
        this.onChange.emit(event.target.innerHTML);
    }
}
PellComponent.decorators = [
    { type: Component, args: [{
                selector: 'pell-editor',
                template: `<div #pell>
  <div [class]="actionBarClass">
    <button *ngFor="let action of actions" [class]="actionButtonClass" [title]="action.title"
    (click)="action.result()" [innerHTML]="action.icon">
    </button>
  </div>
  <div contenteditable="true" [class]="contentClass" (input)="onInput($event)"></div>
</div>
`,
                styles: [`.pell{border-radius:5px;-webkit-box-shadow:0 2px 3px hsla(0,0%,4%,.1),0 0 0 1px hsla(0,0%,4%,.1);box-shadow:0 2px 3px hsla(0,0%,4%,.1),0 0 0 1px hsla(0,0%,4%,.1)}.pell,.pell-content{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%}.pell-content{height:300px;outline:0;overflow-y:auto;padding:10px}.pell-actionbar{background-color:#fff;border-bottom:1px solid hsla(0,0%,4%,.1);border-top-left-radius:5px;border-top-right-radius:5px;width:100%}.pell-button{background-color:transparent;border:none;cursor:pointer;height:30px;outline:0;width:30px}`],
            },] },
];
/** @nocollapse */
PellComponent.ctorParameters = () => [];
PellComponent.propDecorators = {
    "onChange": [{ type: Output },],
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class PellModule {
}
PellModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [PellComponent],
                exports: [PellComponent]
            },] },
];
/** @nocollapse */
PellModule.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

export { PellModule, PellComponent as Éµa };
//# sourceMappingURL=angular-pell.js.map
