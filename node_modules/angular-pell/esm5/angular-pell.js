import { Component, Output, EventEmitter, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

var actions = {
    bold: {
        icon: '<b>B</b>',
        title: 'Bold',
        result: function () { return exec('bold'); }
    },
    italic: {
        icon: '<i>I</i>',
        title: 'Italic',
        result: function () { return exec('italic'); }
    },
    underline: {
        icon: '<u>U</u>',
        title: 'Underline',
        result: function () { return exec('underline'); }
    },
    strikethrough: {
        icon: '<strike>S</strike>',
        title: 'Strike-through',
        result: function () { return exec('strikeThrough'); }
    },
    heading1: {
        icon: '<b>H<sub>1</sub></b>',
        title: 'Heading 1',
        result: function () { return exec('formatBlock', '<H1>'); }
    },
    heading2: {
        icon: '<b>H<sub>2</sub></b>',
        title: 'Heading 2',
        result: function () { return exec('formatBlock', '<H2>'); }
    },
    paragraph: {
        icon: '&#182;',
        title: 'Paragraph',
        result: function () { return exec('formatBlock', '<P>'); }
    },
    quote: {
        icon: '&#8220; &#8221;',
        title: 'Quote',
        result: function () { return exec('formatBlock', '<BLOCKQUOTE>'); }
    },
    olist: {
        icon: '&#35;',
        title: 'Ordered List',
        result: function () { return exec('insertOrderedList'); }
    },
    ulist: {
        icon: '&#8226;',
        title: 'Unordered List',
        result: function () { return exec('insertUnorderedList'); }
    },
    code: {
        icon: '&lt;/&gt;',
        title: 'Code',
        result: function () { return exec('formatBlock', '<PRE>'); }
    },
    line: {
        icon: '&#8213;',
        title: 'Horizontal Line',
        result: function () { return exec('insertHorizontalRule'); }
    },
    link: {
        icon: '&#128279;',
        title: 'Link',
        result: function () {
            var url = window.prompt('Enter the link URL');
            if (url)
                exec('createLink', url);
        }
    },
    image: {
        icon: '&#128247;',
        title: 'Image',
        result: function () {
            var url = window.prompt('Enter the image URL');
            if (url)
                exec('insertImage', url);
        }
    }
};
var exec = function (command, value) {
    if (value === void 0) { value = null; }
    document.execCommand(command, false, value);
};
var PellComponent = /** @class */ (function () {
    function PellComponent() {
        this.actions = Object.keys(actions).map(function (action) { return actions[action]; });
        this.actionBarClass = 'pell-actionbar';
        this.actionButtonClass = 'pell-button';
        this.contentClass = 'pell-content';
        this.onChange = new EventEmitter();
    }
    PellComponent.prototype.ngOnInit = function () {
    };
    PellComponent.prototype.onInput = function (event) {
        this.onChange.emit(event.target.innerHTML);
    };
    return PellComponent;
}());
PellComponent.decorators = [
    { type: Component, args: [{
                selector: 'pell-editor',
                template: "<div #pell>\n  <div [class]=\"actionBarClass\">\n    <button *ngFor=\"let action of actions\" [class]=\"actionButtonClass\" [title]=\"action.title\"\n    (click)=\"action.result()\" [innerHTML]=\"action.icon\">\n    </button>\n  </div>\n  <div contenteditable=\"true\" [class]=\"contentClass\" (input)=\"onInput($event)\"></div>\n</div>\n",
                styles: [".pell{border-radius:5px;-webkit-box-shadow:0 2px 3px hsla(0,0%,4%,.1),0 0 0 1px hsla(0,0%,4%,.1);box-shadow:0 2px 3px hsla(0,0%,4%,.1),0 0 0 1px hsla(0,0%,4%,.1)}.pell,.pell-content{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%}.pell-content{height:300px;outline:0;overflow-y:auto;padding:10px}.pell-actionbar{background-color:#fff;border-bottom:1px solid hsla(0,0%,4%,.1);border-top-left-radius:5px;border-top-right-radius:5px;width:100%}.pell-button{background-color:transparent;border:none;cursor:pointer;height:30px;outline:0;width:30px}"],
            },] },
];
PellComponent.ctorParameters = function () { return []; };
PellComponent.propDecorators = {
    "onChange": [{ type: Output },],
};
var PellModule = /** @class */ (function () {
    function PellModule() {
    }
    return PellModule;
}());
PellModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [PellComponent],
                exports: [PellComponent]
            },] },
];
PellModule.ctorParameters = function () { return []; };

export { PellModule, PellComponent as Éµa };
//# sourceMappingURL=angular-pell.js.map
