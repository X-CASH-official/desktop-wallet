{
  "version": 3,
  "file": "ngx-chips.js",
  "sources": [
    "ng://ngx-chips/out/tag-input.module.ts",
    "ng://ngx-chips/out/components/icon/icon.ts",
    "ng://ngx-chips/out/components/tag-input/tag-input.ts",
    "ng://ngx-chips/out/components/tag-input/animations.ts",
    "ng://ngx-chips/out/components/tag/tag.component.ts",
    "ng://ngx-chips/out/components/tag/tag-ripple.component.ts",
    "ng://ngx-chips/out/components/dropdown/tag-input-dropdown.component.ts",
    "ng://ngx-chips/out/components/tag-input-form/tag-input-form.component.ts",
    "ng://ngx-chips/out/core/helpers/listen.ts",
    "ng://ngx-chips/out/core/accessor.ts",
    "ng://ngx-chips/out/core/providers/options-provider.ts",
    "ng://ngx-chips/out/defaults.ts",
    "ng://ngx-chips/out/core/providers/drag-provider.ts",
    "ng://ngx-chips/out/core/constants/index.ts",
    "ng://ngx-chips/out/core/pipes/highlight.pipe.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\nimport { DragProvider } from './core/providers/drag-provider';\nimport { OptionsProvider, Options } from './core/providers/options-provider';\nimport { TagInputComponent } from './components/tag-input/tag-input';\nimport { DeleteIconComponent } from './components/icon/icon';\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\nimport { TagComponent } from './components/tag/tag.component';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagRipple } from './components/tag/tag-ripple.component';\n\nconst optionsProvider = new OptionsProvider();\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule\n    ],\n    declarations: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    exports: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ]\n})\nexport class TagInputModule {\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    public static withDefaults(options: Options): void {\n        optionsProvider.setOptions(options);\n    }\n}\n",
    "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'delete-icon',\n    template: `<span>\n    <svg height=\"16px\" viewBox=\"0 0 32 32\" width=\"16px\">\n        <path d=\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\"\n              fill=\"#121313\" />\n    </svg>\n</span>\n`,\n    styles: [`.dark tag:focus{-webkit-box-shadow:0 0 0 1px #323232;box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;-webkit-box-shadow:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;-webkit-box-shadow:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.4);box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{-webkit-box-shadow:inset 0 1px 1px #d9534f;box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;-webkit-transition:all .25s;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.minimal.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.dark.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.bootstrap.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.bootstrap3-info.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;padding:4px;cursor:text;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}:host(delete-icon){width:20px;height:16px;-webkit-transition:all .15s;transition:all .15s;display:inline-block;text-align:right}:host(delete-icon) path{fill:#444}:host(delete-icon) svg{vertical-align:bottom;height:34px}:host(delete-icon):hover{-webkit-transform:scale(1.5) translateY(-3px);transform:scale(1.5) translateY(-3px)}:host-context(.dark){text-align:right}:host-context(.dark) path{fill:#fff}:host-context(.dark) svg{vertical-align:bottom;height:34px}:host-context(.minimal){text-align:right}:host-context(.minimal) path{fill:#444}:host-context(.minimal) svg{vertical-align:bottom;height:34px}:host-context(.bootstrap){text-align:right}:host-context(.bootstrap) path{fill:#fff}:host-context(.bootstrap) svg{vertical-align:bottom;height:34px}:host-context(tag:active) path,:host-context(tag:focus) path{fill:#fff}:host-context(.darktag:active) path,:host-context(.darktag:focus) path{fill:#000}:host-context(.minimaltag:active) path,:host-context(.minimaltag:focus) path{fill:#000}:host-context(.bootstraptag:active) path,:host-context(.bootstraptag:focus) path{fill:#fff}:host-context(.bootstrap3-info){height:inherit}:host-context(.bootstrap3-info) path{fill:#fff}`]\n})\nexport class DeleteIconComponent {}\n",
    "// angular\nimport {\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    ContentChild,\n    OnInit,\n    TemplateRef,\n    QueryList,\n    AfterViewInit,\n    Type\n} from '@angular/core';\n\nimport {\n    AsyncValidatorFn,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n    ValidatorFn\n} from '@angular/forms';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { debounceTime, filter, map, first} from 'rxjs/operators';\n\n// ng2-tag-input\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\nimport { listen } from '../../core/helpers/listen';\nimport * as constants from '../../core/constants';\n\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\nimport { OptionsProvider } from '../../core/providers/options-provider';\n\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\nimport { TagComponent } from '../tag/tag.component';\n\nimport { animations } from './animations';\nimport { TagInputOptions } from '../../defaults';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst DragEvent = (window as any).DragEvent;\n\nconst CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\n\nconst defaults: Type<TagInputOptions> = forwardRef(() => OptionsProvider.defaults.tagInput);\n\n@Component({\n    selector: 'tag-input',\n    providers: [CUSTOM_ACCESSOR],\n    styles: [`.dark tag:focus{-webkit-box-shadow:0 0 0 1px #323232;box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;-webkit-box-shadow:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;-webkit-box-shadow:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.4);box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{-webkit-box-shadow:inset 0 1px 1px #d9534f;box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;-webkit-transition:all .25s;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.minimal.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.dark.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.bootstrap.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.bootstrap3-info.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;padding:4px;cursor:text;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.progress-bar,.progress-bar:before{height:2px;width:100%;margin:0}.progress-bar{background-color:#2196f3;display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;bottom:0}.progress-bar:before{background-color:#82c4f8;content:'';-webkit-animation:2s cubic-bezier(.4,0,.2,1) infinite running-progress;animation:2s cubic-bezier(.4,0,.2,1) infinite running-progress}@-webkit-keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}100%{margin-left:100%;margin-right:0}}@keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}100%{margin-left:100%;margin-right:0}}tag{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;font-family:Roboto,\"Helvetica Neue\",sans-serif;font-weight:400;font-size:1em;letter-spacing:.05rem;color:#444;border-radius:16px;-webkit-transition:all .3s;transition:all .3s;margin:.1rem .3rem .1rem 0;padding:.08rem .45rem;height:32px;line-height:34px;background:#efefef;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}tag:not(.readonly):not(.tag--editing):focus{background:#2196f3;color:#fff;-webkit-box-shadow:0 2px 3px 1px #d4d1d1;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(.readonly):not(.tag--editing):active{background:#0d8aee;color:#fff;-webkit-box-shadow:0 2px 3px 1px #d4d1d1;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#e2e2e2;color:initial;-webkit-box-shadow:0 2px 3px 1px #d4d1d1;box-shadow:0 2px 3px 1px #d4d1d1}tag.readonly{cursor:default}tag.readonly:focus,tag:focus{outline:0}tag.tag--editing{background-color:#fff;border:1px solid #ccc;cursor:text}.minimal tag{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;border-radius:0;background:#f9f9f9;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.minimal tag:not(.readonly):not(.tag--editing):active,.minimal tag:not(.readonly):not(.tag--editing):focus{background:#d0d0d0;color:initial}.minimal tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#ececec}.minimal tag.readonly{cursor:default}.minimal tag.readonly:focus,.minimal tag:focus{outline:0}.minimal tag.tag--editing{cursor:text}.dark tag{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;color:#f9f9f9;border-radius:3px;background:#444;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.dark tag:not(.readonly):not(.tag--editing):focus{background:#efefef;color:#444}.dark tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#2b2b2b;color:#f9f9f9}.dark tag.readonly{cursor:default}.dark tag.readonly:focus,.dark tag:focus{outline:0}.dark tag.tag--editing{cursor:text}.bootstrap tag{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;color:#f9f9f9;border-radius:.25rem;background:#0275d8;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.bootstrap tag:not(.readonly):not(.tag--editing):active,.bootstrap tag:not(.readonly):not(.tag--editing):focus{background:#025aa5}.bootstrap tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#0267bf;color:#f9f9f9}.bootstrap tag.readonly{cursor:default}.bootstrap tag.readonly:focus,.bootstrap tag:focus{outline:0}.bootstrap tag.tag--editing{cursor:text}.bootstrap3-info tag{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;font-family:inherit;font-weight:400;font-size:95%;color:#fff;border-radius:.25em;background:#5bc0de;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative;padding:.25em .6em;text-align:center;white-space:nowrap}.bootstrap3-info tag:not(.readonly):not(.tag--editing):active,.bootstrap3-info tag:not(.readonly):not(.tag--editing):focus{background:#28a1c5}.bootstrap3-info tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#46b8da;color:#fff}.bootstrap3-info tag.readonly{cursor:default}.bootstrap3-info tag.readonly:focus,.bootstrap3-info tag:focus{outline:0}.bootstrap3-info tag.tag--editing{cursor:text}:host{display:block}`],\n    template: `<!-- CONTAINER -->\n\n<div ngClass=\"ng2-tag-input {{ theme || '' }}\"\n     (click)=\"focus(true, false)\"\n     [attr.tabindex]=\"-1\"\n\n     (drop)=\"dragZone ? onTagDropped($event, undefined) : undefined\"\n     (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\n     (dragover)=\"dragZone ? onDragOver($event) : undefined\"\n     (dragend)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\n\n     [class.ng2-tag-input--dropping]=\"isDropping()\"\n     [class.ng2-tag-input--disabled]=\"disable\"\n     [class.ng2-tag-input--loading]=\"isLoading\"\n     [class.ng2-tag-input--invalid]=\"hasErrors()\"\n     [class.ng2-tag-input--focused]=\"isInputFocused()\">\n\n    <!-- TAGS -->\n    <div class=\"ng2-tags-container\">\n        <tag *ngFor=\"let item of items; let i = index; trackBy: trackBy\"\n\n             (onSelect)=\"selectItem(item)\"\n             (onRemove)=\"onRemoveRequested(item, i)\"\n             (onKeyDown)=\"handleKeydown($event)\"\n             (onTagEdited)=\"updateEditedTag($event)\"\n             (onBlur)=\"onTagBlurred($event, i)\"\n             draggable=\"{{ editable }}\"\n\n             (dragstart)=\"dragZone ? onDragStarted($event, item, i) : undefined\"\n             (drop)=\"dragZone ? onTagDropped($event, i) : undefined\"\n             (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\n             (dragover)=\"dragZone ? onDragOver($event, i) : undefined\"\n             (dragleave)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\n\n             [canAddTag]=\"isTagValid\"\n             [attr.tabindex]=\"0\"\n             [disabled]=\"disable\"\n             [@animation]=\"animationMetadata\"\n             [hasRipple]=\"ripple\"\n             [index]=\"i\"\n             [removable]=\"removable\"\n             [editable]=\"editable\"\n             [displayBy]=\"displayBy\"\n             [identifyBy]=\"identifyBy\"\n             [template]=\"!!hasCustomTemplate() ? templates.first : undefined\"\n             [draggable]=\"dragZone\"\n             [model]=\"item\">\n        </tag>\n\n        <tag-input-form\n            (onSubmit)=\"onFormSubmit()\"\n            (onBlur)=\"blur()\"\n            (click)=\"dropdown ? dropdown.show() : undefined\"\n            (onKeydown)=\"fireEvents('keydown', $event)\"\n            (onKeyup)=\"fireEvents('keyup', $event)\"\n\n            [(inputText)]=\"inputText\"\n            [disabled]=\"disable\"\n            [validators]=\"validators\"\n            [asyncValidators]=\"asyncValidators\"\n            [hidden]=\"maxItemsReached\"\n            [placeholder]=\"items.length ? placeholder : secondaryPlaceholder\"\n            [inputClass]=\"inputClass\"\n            [inputId]=\"inputId\"\n            [tabindex]=\"tabindex\">\n        </tag-input-form>\n    </div>\n\n    <div class=\"progress-bar\" *ngIf=\"isProgressBarVisible$ | async\"></div>\n</div>\n\n<!-- ERRORS -->\n<div *ngIf=\"hasErrors()\" class=\"error-messages {{ theme || '' }}\">\n    <p *ngFor=\"let error of errors\" class=\"error-message\">\n        <span>{{ error }}</span>\n    </p>\n</div>\n\n<ng-content></ng-content>\n`,\n    animations\n})\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\n    /**\n     * @name separatorKeys\n     * @desc keyboard keys with which a user can separate items\n     */\n    @Input() public separatorKeys: string[] = new defaults().separatorKeys;\n\n    /**\n     * @name separatorKeyCodes\n     * @desc keyboard key codes with which a user can separate items\n     */\n    @Input() public separatorKeyCodes: number[] = new defaults().separatorKeyCodes;\n\n    /**\n     * @name placeholder\n     * @desc the placeholder of the input text\n     */\n    @Input() public placeholder: string = new defaults().placeholder;\n\n    /**\n     * @name secondaryPlaceholder\n     * @desc placeholder to appear when the input is empty\n     */\n    @Input() public secondaryPlaceholder: string = new defaults().secondaryPlaceholder;\n\n    /**\n     * @name maxItems\n     * @desc maximum number of items that can be added\n     */\n    @Input() public maxItems: number = new defaults().maxItems;\n\n    /**\n     * @name validators\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public validators: ValidatorFn[] = new defaults().validators;\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = new defaults().asyncValidators;\n\n    /**\n    * - if set to true, it will only possible to add items from the autocomplete\n    * @name onlyFromAutocomplete\n    */\n    @Input() public onlyFromAutocomplete = new defaults().onlyFromAutocomplete;\n\n    /**\n     * @name errorMessages\n     */\n    @Input() public errorMessages: { [key: string]: string } = new defaults().errorMessages;\n\n    /**\n     * @name theme\n     */\n    @Input() public theme: string = new defaults().theme;\n\n    /**\n     * @name onTextChangeDebounce\n     */\n    @Input() public onTextChangeDebounce = new defaults().onTextChangeDebounce;\n\n    /**\n     * - custom id assigned to the input\n     * @name id\n     */\n    @Input() public inputId = new defaults().inputId;\n\n    /**\n     * - custom class assigned to the input\n     */\n    @Input() public inputClass: string = new defaults().inputClass;\n\n    /**\n     * - option to clear text input when the form is blurred\n     * @name clearOnBlur\n     */\n    @Input() public clearOnBlur: boolean = new defaults().clearOnBlur;\n\n    /**\n     * - hideForm\n     * @name clearOnBlur\n     */\n    @Input() public hideForm: boolean = new defaults().hideForm;\n\n    /**\n     * @name addOnBlur\n     */\n    @Input() public addOnBlur: boolean = new defaults().addOnBlur;\n\n    /**\n     * @name addOnPaste\n     */\n    @Input() public addOnPaste: boolean = new defaults().addOnPaste;\n\n    /**\n     * - pattern used with the native method split() to separate patterns in the string pasted\n     * @name pasteSplitPattern\n     */\n    @Input() public pasteSplitPattern = new defaults().pasteSplitPattern;\n\n    /**\n     * @name blinkIfDupe\n     */\n    @Input() public blinkIfDupe = new defaults().blinkIfDupe;\n\n    /**\n     * @name removable\n     */\n    @Input() public removable = new defaults().removable;\n\n    /**\n     * @name editable\n     */\n    @Input() public editable: boolean = new defaults().editable;\n\n    /**\n     * @name allowDupes\n     */\n    @Input() public allowDupes = new defaults().allowDupes;\n\n    /**\n     * @description if set to true, the newly added tags will be added as strings, and not objects\n     * @name modelAsStrings\n     */\n    @Input() public modelAsStrings = new defaults().modelAsStrings;\n\n    /**\n     * @name trimTags\n     */\n    @Input() public trimTags = new defaults().trimTags;\n\n    /**\n     * @name inputText\n     */\n    @Input() public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name ripple\n     */\n    @Input() public ripple: boolean = new defaults().ripple;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex: string = new defaults().tabIndex;\n\n    /**\n     * @name disable\n     */\n    @Input() public disable: boolean = new defaults().disable;\n\n    /**\n     * @name dragZone\n     */\n    @Input() public dragZone: string = new defaults().dragZone;\n\n    /**\n     * @name onRemoving\n     */\n    @Input() public onRemoving = new defaults().onRemoving;\n\n    /**\n     * @name onAdding\n     */\n    @Input() public onAdding = new defaults().onAdding;\n\n    /**\n     * @name animationDuration\n     */\n    @Input() public animationDuration = new defaults().animationDuration;\n\n    /**\n     * @name onAdd\n     * @desc event emitted when adding a new item\n     */\n    @Output() public onAdd = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     * @desc event emitted when removing an existing item\n     */\n    @Output() public onRemove = new EventEmitter<TagModel>();\n\n    /**\n     * @name onSelect\n     * @desc event emitted when selecting an item\n     */\n    @Output() public onSelect = new EventEmitter<TagModel>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is focused\n     */\n    @Output() public onFocus = new EventEmitter<string>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is blurred\n     */\n    @Output() public onBlur = new EventEmitter<string>();\n\n    /**\n     * @name onTextChange\n     * @desc event emitted when the input value changes\n     */\n    @Output() public onTextChange = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when text is pasted in the form\n     * @name onPaste\n     */\n    @Output() public onPaste = new EventEmitter<string>();\n\n    /**\n     * - output triggered when tag entered is not valid\n     * @name onValidationError\n     */\n    @Output() public onValidationError = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when tag is edited\n     * @name onTagEdited\n     */\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\n\n    /**\n     * @name dropdown\n     */\n    @ContentChild(TagInputDropdown) public dropdown: TagInputDropdown;\n\n    /**\n     * @name template\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name inputForm\n     */\n    @ViewChild(TagInputForm) public inputForm: TagInputForm;\n\n    /**\n     * @name selectedTag\n     * @desc reference to the current selected tag\n     */\n    public selectedTag: TagModel | undefined;\n\n    /**\n     * @name isLoading\n     */\n    public isLoading = false;\n\n    /**\n     * @name inputText\n     * @param text\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name tags\n     * @desc list of Element items\n     */\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\n\n    /**\n     * @name listeners\n     * @desc array of events that get fired using @fireEvents\n     */\n    private listeners = {\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\n        [constants.KEYUP]: <{ (fun): any }[]>[]\n    };\n\n    /**\n     * @description emitter for the 2-way data binding inputText value\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @description private variable to bind get/set\n     * @name inputTextValue\n     */\n    public inputTextValue = '';\n\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n    @HostBinding('attr.tabindex')\n    public get tabindexAttr(): string {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n\n    /**\n     * @name animationMetadata\n     */\n    public animationMetadata: { value: string, params: object };\n\n    public errors: string[] = [];\n\n    public isProgressBarVisible$: Observable<boolean>;\n\n    constructor(private readonly renderer: Renderer2,\n                public readonly dragProvider: DragProvider) {\n        super();\n    }\n\n    /**\n     * @name ngAfterViewInit\n     */\n    public ngAfterViewInit(): void {\n        // set up listeners\n\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n\n        const statusChanges$ = this.inputForm.form.statusChanges;\n\n        statusChanges$.pipe(\n            filter((status: string) => status !== 'PENDING')\n        ).subscribe(() => {\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\n        });\n\n        this.isProgressBarVisible$ = statusChanges$.pipe(\n            map((status: string) => {\n                return status === 'PENDING' || this.isLoading;\n            })\n        );\n\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(constants.MAX_ITEMS_WARNING);\n        }\n\n        // Setting editable to false to fix problem with tags in IE still being editable when\n        // onlyFromAutocomplete is true\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\n\n        this.setAnimationMetadata();\n    }\n\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\n        return new Promise(resolve => {\n            const subscribeFn = (model: TagModel) => {\n                this.removeItem(model, index);\n                resolve(tag);\n            };\n\n            this.onRemoving ?\n                this.onRemoving(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     */\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel, index?: number): Promise<TagModel> {\n        return new Promise((resolve, reject) => {\n            const subscribeFn = (model: TagModel) => {\n                return this\n                    .addItem(fromAutocomplete, model, index)\n                    .then(resolve)\n                    .catch(reject);\n            };\n\n            return this.onAdding ?\n                this.onAdding(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name appendTag\n     * @param tag {TagModel}\n     */\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\n        const items = this.items;\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n\n        this.items = [\n            ...items.slice(0, index),\n            model,\n            ...items.slice(index, items.length)\n        ];\n    }\n\n    /**\n     * @name createTag\n     * @param model\n     */\n    public createTag = (model: TagModel): TagModel => {\n        const trim = (val: TagModel, key: string): TagModel => {\n            return typeof val === 'string' ? val.trim() : val[key];\n        };\n\n        return {\n            ...typeof model !== 'string' ? model : {},\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n        };\n    }\n\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n    public selectItem(item: TagModel | undefined, emit = true): void {\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\n\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n\n        this.selectedTag = item;\n\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n    public fireEvents(eventName: string, $event?): void {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n    public handleKeydown(data: any): void {\n        const event = data.event;\n        const key = event.keyCode || event.which;\n        const shiftKey = event.shiftKey || false;\n\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\n            case constants.ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, constants.PREV);\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n\n            case constants.ACTIONS_KEYS.TAB:\n                if (shiftKey) {\n                    if (this.isFirstTag(data.model)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.PREV);\n                } else {\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.NEXT);\n                }\n                break;\n\n            default:\n                return;\n        }\n\n        // prevent default behaviour\n        event.preventDefault();\n    }\n\n    public async onFormSubmit() {\n        try {\n            await this.onAddingRequested(false, this.formValue);\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * @name setInputValue\n     * @param value\n     */\n    public setInputValue(value: string, emitEvent = true): void {\n        const control = this.getControl();\n\n        // update form value with the transformed item\n        control.setValue(value, { emitEvent });\n    }\n\n    /**\n     * @name getControl\n     */\n    private getControl(): FormControl {\n        return this.inputForm.value as FormControl;\n    }\n\n    /**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n    public focus(applyFocus = false, displayAutocomplete = false): void {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n\n        this.selectItem(undefined, false);\n\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.onTouched();\n\n        this.onBlur.emit(this.formValue);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        return this.inputForm && this.inputForm.hasErrors();\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        return this.inputForm && this.inputForm.isInputFocused();\n    }\n\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n    public hasCustomTemplate(): boolean {\n        const template = this.templates ? this.templates.first : undefined;\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n\n        return Boolean(template && template !== menuTemplate);\n    }\n\n    /**\n     * @name maxItemsReached\n     */\n    public get maxItemsReached(): boolean {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n\n    /**\n     * @name formValue\n     */\n    public get formValue(): string {\n        const form = this.inputForm.value;\n\n        return form ? form.value : '';\n    }\n\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\n        event.stopPropagation();\n\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\n\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({dragging: true, index});\n    }\n\n    /**\n     * @name onDragOver\n     * @param event\n     */\n    public onDragOver(event: DragEvent, index?: number): void {\n        this.dragProvider.setState({dropping: true});\n        this.dragProvider.setReceiver(this);\n\n        event.preventDefault();\n    }\n\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n    public onTagDropped(event: DragEvent, index?: number): void {\n        const item = this.dragProvider.getDraggedItem(event);\n\n        if (!item || item.zone !== this.dragZone) {\n            return;\n        }\n\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * @name isDropping\n     */\n    public isDropping(): boolean {\n        const isReceiver = this.dragProvider.receiver === this;\n        const isDropping = this.dragProvider.getState('dropping');\n\n        return Boolean(isReceiver && isDropping);\n    }\n\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n    public onTagBlurred(changedElement: TagModel, index: number): void {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n\n    /**\n     * @name trackBy\n     * @param items\n     */\n    public trackBy(index: number, item: TagModel): string {\n        return item[this.identifyBy];\n    }\n\n    /**\n     * @name updateEditedTag\n     * @param tag\n     */\n    public updateEditedTag({tag, index}: {tag: TagModel, index: number}): void {\n        this.onTagEdited.emit(tag);\n    }\n\n    /**\n     *\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n        const value = this.getItemDisplay(tag).trim();\n\n        if (selectedItem && !fromAutocomplete || !value) {\n            return false;\n        }\n\n        const dupe = this.findDupe(tag, fromAutocomplete);\n\n        // if so, give a visual cue and return false\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\n            const model = this.tags.find(item => {\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\n            });\n\n            if (model) {\n                model.blink();\n            }\n        }\n\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n\n        const assertions = [\n            // 1. there must be no dupe OR dupes are allowed\n            !dupe || this.allowDupes,\n\n            // 2. check max items has not been reached\n            !this.maxItemsReached,\n\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\n        ];\n\n        return assertions.filter(Boolean).length === assertions.length;\n    }\n\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n    private moveToTag(item: TagModel, direction: string): void {\n        const isLast = this.isLastTag(item);\n        const isFirst = this.isFirstTag(item);\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\n            (direction === constants.PREV && isFirst);\n\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n\n        const offset = direction === constants.NEXT ? 1 : -1;\n        const index = this.getTagIndex(item) + offset;\n        const tag = this.getTagAtIndex(index);\n\n        return tag.select.call(tag);\n    }\n\n    /**\n     * @name isFirstTag\n     * @param item {TagModel}\n     */\n    private isFirstTag(item: TagModel): boolean {\n        return this.tags.first.model === item;\n    }\n\n    /**\n     * @name isLastTag\n     * @param item {TagModel}\n     */\n    private isLastTag(item: TagModel): boolean {\n        return this.tags.last.model === item;\n    }\n\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n    private getTagIndex(item: TagModel): number {\n        const tags = this.tags.toArray();\n\n        return tags.findIndex(tag => tag.model === item);\n    }\n\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n    private getTagAtIndex(index: number) {\n        const tags = this.tags.toArray();\n\n        return tags[index];\n    }\n\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n    private removeItem(tag: TagModel, index: number): void {\n        this.items = this.getItemsWithout(index);\n\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n\n        // focus input\n        this.focus(true, false);\n\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete\n     * @param item\n     */\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number): Promise<TagModel> {\n        const display = this.getItemDisplay(item);\n        const tag = this.createTag(item);\n\n        if (fromAutocomplete) {\n            this.setInputValue(this.getItemValue(item, true));\n        }\n\n        return new Promise((resolve, reject) => {\n            /**\n             * @name reset\n             */\n            const reset = (): void => {\n                // reset control and focus input\n                this.setInputValue('');\n\n                // focus input\n                this.focus(true, false);\n\n                resolve(display);\n            };\n\n            const appendItem = (): void => {\n                this.appendTag(tag, index);\n\n                // emit event\n                this.onAdd.emit(tag);\n\n                if (!this.dropdown) {\n                    return;\n                }\n\n                this.dropdown.hide();\n\n                if (this.dropdown.showDropdownIfEmpty) {\n                    this.dropdown.show();\n                }\n            };\n\n            const status = this.inputForm.form.status;\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\n\n            const onValidationError = () => {\n                this.onValidationError.emit(tag);\n                return reject();\n            };\n\n            if (status === 'VALID' && isTagValid) {\n                appendItem();\n                return reset();\n            }\n\n            if (status === 'INVALID' || !isTagValid) {\n                reset();\n                return onValidationError();\n            }\n\n            if (status === 'PENDING') {\n                const statusUpdate$ = this.inputForm.form.statusChanges;\n\n                return statusUpdate$\n                    .pipe(\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\n                        first()\n                    )\n                    .subscribe((statusUpdate) => {\n                        if (statusUpdate === 'VALID' && isTagValid) {\n                            appendItem();\n                            resolve();\n                        } else {\n                            onValidationError();\n                        }\n                });\n            }\n        });\n    }\n\n    /**\n     * @name setupSeparatorKeysListener\n     */\n    private setupSeparatorKeysListener(): void {\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const listener = ($event) => {\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n            // the keyCode of keydown event is 229 when IME is processing the key event.\n            const isIMEProcessing = $event.keyCode === 229;\n\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue)\n                    .catch(() => {});\n            }\n        };\n\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\n    }\n\n    /**\n     * @name setUpKeypressListeners\n     */\n    private setUpKeypressListeners(): void {\n        const listener = ($event) => {\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n\n        // setting up the keypress listeners\n        listen.call(this, constants.KEYDOWN, listener);\n    }\n\n    /**\n     * @name setUpKeydownListeners\n     */\n    private setUpInputKeydownListeners(): void {\n        this.inputForm.onKeydown.subscribe(event => {\n            this.fireEvents('keydown', event);\n\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\n                event.preventDefault();\n            }\n        });\n    }\n\n    /**\n     * @name setUpOnPasteListener\n     */\n    private setUpOnPasteListener() {\n        const input = this.inputForm.input.nativeElement;\n\n        // attach listener to input\n        this.renderer.listen(input, 'paste', (event) => {\n            this.onPasteCallback(event);\n\n            event.preventDefault();\n            return true;\n        });\n    }\n\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n    private setUpTextChangeSubscriber(): void {\n        this.inputForm.form\n            .valueChanges\n            .pipe(\n                debounceTime(this.onTextChangeDebounce)\n            )\n            .subscribe((value: {item: string}) => {\n                this.onTextChange.emit(value.item);\n            });\n    }\n\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n    private setUpOnBlurSubscriber(): void {\n        const filterFn = (): boolean => {\n            const isVisible = this.dropdown && this.dropdown.isVisible;\n            return !isVisible && !!this.formValue;\n        };\n\n        this.inputForm\n            .onBlur\n            .pipe(\n                debounceTime(100),\n                filter(filterFn)\n            )\n            .subscribe(() => {\n                const reset = () => this.setInputValue('');\n\n                if (this.addOnBlur) {\n                    return this\n                        .onAddingRequested(false, this.formValue)\n                        .then(reset)\n                        .catch(reset);\n                }\n\n                reset();\n            });\n    }\n\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const id = tag[identifyBy];\n\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n\n    /**\n     * @name onPasteCallback\n     * @param data\n     */\n    private onPasteCallback = async (data: ClipboardEvent) => {\n        interface IEWindow extends Window {\n            clipboardData: DataTransfer;\n        }\n\n        const getText = (): string => {\n            const isIE = Boolean((window as IEWindow).clipboardData);\n            const clipboardData = isIE ? (\n                (window as IEWindow).clipboardData\n            ) : data.clipboardData;\n            const type = isIE ? 'Text' : 'text/plain';\n\n            return clipboardData.getData(type) || '';\n        };\n\n        const text = getText();\n\n        const requests = text\n            .split(this.pasteSplitPattern)\n            .map(item => {\n                const tag = this.createTag(item);\n                this.setInputValue(tag[this.displayBy]);\n                return this.onAddingRequested(false, tag);\n            });\n\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\n\n        Promise.all(requests).then(() => {\n            this.onPaste.emit(text);\n            resetInput();\n       })\n       .catch(resetInput);\n    }\n\n    /**\n     * @name setAnimationMetadata\n     */\n    private setAnimationMetadata(): void {\n        this.animationMetadata = {\n            value: 'in',\n            params: {...this.animationDuration}\n        };\n    }\n}\n",
    "import {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n/**\n * @name animations\n */\nexport const animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate(\"{{ enter }}\", keyframes([\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\n            ]))\n        ]),\n        transition(':leave', [\n            animate(\"{{ leave }}\", keyframes([\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\n            ]))\n        ])\n    ])\n];\n",
    "import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ElementRef,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ChangeDetectorRef,\n    Renderer2\n} from '@angular/core';\n\nimport { TagModel } from '../../core/accessor';\nimport { TagRipple } from '../tag/tag-ripple.component';\nimport { EventLike } from '../../core/helpers/event-like';\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\n\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n@Component({\n    selector: \"tag\",\n    template: `<div (click)=\"select($event)\"\n     (dblclick)=\"toggleEditMode()\"\n     (mousedown)=\"rippleState='clicked'\"\n     (mouseup)=\"rippleState='none'\"\n     [ngSwitch]=\"!!template\"\n     [class.disabled]=\"disabled\"\n     [attr.tabindex]=\"-1\"\n     [attr.aria-label]=\"getDisplayValue(model)\">\n\n    <div *ngSwitchCase=\"true\" [attr.contenteditable]=\"editing\">\n        <!-- CUSTOM TEMPLATE -->\n        <ng-template\n            [ngTemplateOutletContext]=\"{ item: model, index: index }\"\n            [ngTemplateOutlet]=\"template\">\n        </ng-template>\n    </div>\n\n    <div *ngSwitchCase=\"false\" class=\"tag-wrapper\">\n        <!-- TAG NAME -->\n        <div [attr.contenteditable]=\"editing\"\n             [attr.title]=\"getDisplayValue(model)\"\n             class=\"tag__text inline\"\n             spellcheck=\"false\"\n             (keydown.enter)=\"disableEditMode($event)\"\n             (keydown.escape)=\"disableEditMode($event)\"\n             (click)=\"editing ? $event.stopPropagation() : undefined\"\n             (blur)=\"onBlurred($event)\">\n            {{ getDisplayValue(model) }}\n        </div>\n\n        <!-- 'X' BUTTON -->\n        <delete-icon\n            aria-label=\"Remove tag\"\n            role=\"button\"\n            (click)=\"remove($event)\"\n            *ngIf=\"isDeleteIconVisible()\">\n        </delete-icon>\n    </div>\n</div>\n\n<tag-ripple [state]=\"rippleState\"\n            [attr.tabindex]=\"-1\"\n            *ngIf=\"isRippleVisible\">\n</tag-ripple>\n`,\n    styles: [`:host,:host>div,:host>div:focus{outline:0;overflow:hidden;-webkit-transition:opacity 1s;transition:opacity 1s;z-index:1}:host{max-width:400px}:host.blink{-webkit-animation:.3s ease-in-out forwards blink;animation:.3s ease-in-out forwards blink}@-webkit-keyframes blink{0%{opacity:.3}}@keyframes blink{0%{opacity:.3}}:host .disabled{cursor:not-allowed}:host [contenteditable=true]{outline:0}.tag-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex}.tag__text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}`]\n})\nexport class TagComponent {\n    /**\n     * @name model {TagModel}\n     */\n    @Input()\n    public model: TagModel;\n\n    /**\n     * @name removable {boolean}\n     */\n    @Input()\n    public removable: boolean;\n\n    /**\n     * @name editable {boolean}\n     */\n    @Input()\n    public editable: boolean;\n\n    /**\n     * @name template {TemplateRef<any>}\n     */\n    @Input()\n    public template: TemplateRef<any>;\n\n    /**\n     * @name displayBy {string}\n     */\n    @Input()\n    public displayBy: string;\n\n    /**\n     * @name identifyBy {string}\n     */\n    @Input()\n    public identifyBy: string;\n\n    /**\n     * @name index {number}\n     */\n    @Input()\n    public index: number;\n\n    /**\n     * @name hasRipple\n     */\n    @Input()\n    public hasRipple: boolean;\n\n    /**\n     * @name disabled\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * @name canAddTag\n     */\n    @Input()\n    public canAddTag: (tag: TagModel) => boolean;\n\n    /**\n     * @name onSelect\n     */\n    @Output()\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     */\n    @Output()\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onBlur\n     */\n    @Output()\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onKeyDown\n     */\n    @Output()\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @name onTagEdited\n     */\n    @Output()\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name readonly {boolean}\n     */\n    public get readonly(): boolean {\n        return typeof this.model !== \"string\" && this.model.readonly === true;\n    }\n\n    /**\n     * @name editing\n     */\n    public editing = false;\n\n    /**\n     * @name moving\n     */\n    @HostBinding(\"class.moving\")\n    public moving: boolean;\n\n    /**\n     * @name rippleState\n     */\n    public rippleState = \"none\";\n\n    /**\n     * @name ripple {TagRipple}\n     */\n    @ViewChild(TagRipple)\n    public ripple: TagRipple;\n\n    constructor(\n        public element: ElementRef,\n        public renderer: Renderer2,\n        private cdRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * @name select\n     */\n    public select($event?: MouseEvent): void {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n\n        if ($event) {\n            $event.stopPropagation();\n        }\n\n        this.focus();\n\n        this.onSelect.emit(this.model);\n    }\n\n    /**\n     * @name remove\n     */\n    public remove($event: MouseEvent): void {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    public move(): void {\n        this.moving = true;\n    }\n\n    /**\n     * @name keydown\n     * @param event\n     */\n    @HostListener(\"keydown\", [\"$event\"])\n    public keydown(event: EventLike): void {\n        if (this.editing) {\n            if (event.keyCode === 13) {\n                return this.disableEditMode(event)\n            }\n        }\n\n        this.onKeyDown.emit({ event, model: this.model });\n    }\n\n    /**\n     * @name blink\n     */\n    public blink(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add(\"blink\");\n\n        setTimeout(() => classList.remove(\"blink\"), 50);\n    }\n\n    /**\n     * @name toggleEditMode\n     */\n    public toggleEditMode(): void {\n        if (this.editable) {\n            return this.editing ? undefined : this.activateEditMode();\n        }\n    }\n\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    public onBlurred(event: any): void {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n        if (!this.editable) {\n            return;\n        }\n\n        this.disableEditMode();\n\n        const value: string = event.target.innerText;\n        const result =\n            typeof this.model === \"string\"\n                ? value\n                : { ...this.model, [this.displayBy]: value };\n\n        this.onBlur.emit(result);\n    }\n\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n    public getDisplayValue(item: TagModel): string {\n        return typeof item === \"string\" ? item : item[this.displayBy];\n    }\n\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n    public get isRippleVisible(): boolean {\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\n    }\n\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    public disableEditMode($event?: EventLike): void {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n\n        this.editing = false;\n        classList.remove(\"tag--editing\");\n\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name isDeleteIconVisible\n     */\n    public isDeleteIconVisible(): boolean {\n        return (\n            !this.readonly && !this.disabled && this.removable && !this.editing\n        );\n    }\n\n    /**\n     * @name getContentEditableText\n     */\n    private getContentEditableText(): string {\n        const input = this.getContentEditable();\n\n        return input ? input.innerText.trim() : \"\";\n    }\n\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    private setContentEditableText(model: TagModel) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n\n        input.innerText = value;\n    }\n\n    /**\n     * @name\n     */\n    private activateEditMode(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n\n        this.editing = true;\n    }\n\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    private storeNewValue(input: string): void {\n        const exists = (tag: TagModel) => {\n            return typeof tag === 'string'\n                ? tag === input\n                : tag[this.displayBy] === input;\n        };\n\n        const hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n\n        const model =\n            typeof this.model === 'string'\n                ? input\n                : {\n                      index: this.index,\n                      [this.identifyBy]: hasId()\n                          ? this.model[this.identifyBy]\n                          : input,\n                      [this.displayBy]: input\n                  };\n\n        if (this.canAddTag(model)) {\n            this.onTagEdited.emit({ tag: model, index: this.index });\n        } else {\n            this.setContentEditableText(this.model);\n        }\n    }\n\n    /**\n     * @name getContentEditable\n     */\n    private getContentEditable(): HTMLInputElement {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n}\n",
    "import {\n    Component,\n    Input\n} from '@angular/core';\n\n\nimport {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state\n} from '@angular/animations';\n\n@Component({\n    selector: 'tag-ripple',\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n        \n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n    animations: [\n        trigger('ink', [\n            state('none', style({width: 0, opacity: 0})),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\n                ]))\n            ])\n        ])\n    ]\n})\nexport class TagRipple {\n    @Input() public state: string = 'none';\n}\n",
    "import {\n    Component,\n    ContentChildren,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Injector,\n    Input,\n    QueryList,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { map, filter, first, debounceTime } from 'rxjs/operators';\n\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\nimport { OptionsProvider } from '../../core/providers/options-provider';\nimport { TagInputComponent } from '../tag-input/tag-input';\nimport { TagInputDropdownOptions } from '../../defaults';\nimport { TagModel } from '../../core/accessor';\n\nconst defaults: Type<TagInputDropdownOptions> = forwardRef(() => OptionsProvider.defaults.dropdown);\n\n@Component({\n    selector: 'tag-input-dropdown',\n    template: `<ng2-dropdown [dynamicUpdate]=\"dynamicUpdate\">\n    <ng2-dropdown-menu [focusFirstElement]=\"focusFirstElement\"\n                       [zIndex]=\"zIndex\"\n                       [appendToBody]=\"appendToBody\"\n                       [offset]=\"offset\">\n        <ng2-menu-item *ngFor=\"let item of items; let index = index; let last = last\"\n                       [value]=\"item\"\n                       [ngSwitch]=\"!!templates.length\">\n\n            <span *ngSwitchCase=\"false\"\n                  [innerHTML]=\"item[displayBy] | highlight : tagInput.inputForm.value.value\">\n            </span>\n\n            <ng-template *ngSwitchDefault\n                      [ngTemplateOutlet]=\"templates.first\"\n                      [ngTemplateOutletContext]=\"{ item: item, index: index, last: last }\">\n            </ng-template>\n        </ng2-menu-item>\n    </ng2-dropdown-menu>\n</ng2-dropdown>\n`\n})\nexport class TagInputDropdown {\n    /**\n     * @name dropdown\n     */\n    @ViewChild(Ng2Dropdown) public dropdown: Ng2Dropdown;\n\n    /**\n     * @name menuTemplate\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name offset\n     */\n    @Input() public offset: string = new defaults().offset;\n\n    /**\n     * @name focusFirstElement\n     */\n    @Input() public focusFirstElement = new defaults().focusFirstElement;\n\n    /**\n     * - show autocomplete dropdown if the value of input is empty\n     * @name showDropdownIfEmpty\n     */\n    @Input() public showDropdownIfEmpty = new defaults().showDropdownIfEmpty;\n\n    /**\n     * @description observable passed as input which populates the autocomplete items\n     * @name autocompleteObservable\n     */\n    @Input() public autocompleteObservable: (text: string) => Observable<any>;\n\n    /**\n     * - desc minimum text length in order to display the autocomplete dropdown\n     * @name minimumTextLength\n     */\n    @Input() public minimumTextLength = new defaults().minimumTextLength;\n\n    /**\n     * - number of items to display in the autocomplete dropdown\n     * @name limitItemsTo\n     */\n    @Input() public limitItemsTo: number = new defaults().limitItemsTo;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy = new defaults().displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy = new defaults().identifyBy;\n\n    /**\n     * @description a function a developer can use to implement custom matching for the autocomplete\n     * @name matchingFn\n     */\n    @Input() public matchingFn: (value: string, target: TagModel) => boolean = new defaults().matchingFn;\n\n    /**\n     * @name appendToBody\n     */\n    @Input() public appendToBody = new defaults().appendToBody;\n\n    /**\n     * @name keepOpen\n     * @description option to leave dropdown open when adding a new item\n     */\n    @Input() public keepOpen = new defaults().keepOpen;\n\n    /**\n     * @name dynamicUpdate\n     */\n    @Input() public dynamicUpdate = new defaults().dynamicUpdate;\n\n    /**\n    * @name zIndex\n     */\n    @Input() public zIndex = new defaults().zIndex;\n\n    /**\n     * list of items that match the current value of the input (for autocomplete)\n     * @name items\n     */\n    public items: TagModel[] = [];\n\n    /**\n     * @name tagInput\n     */\n    public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\n\n    /**\n     * @name _autocompleteItems\n     */\n    private _autocompleteItems: TagModel[] = [];\n\n    /**\n     * @name autocompleteItems\n     * @param items\n     */\n    public set autocompleteItems(items: TagModel[]) {\n        this._autocompleteItems = items;\n    }\n\n    /**\n     * @name autocompleteItems\n     * @desc array of items that will populate the autocomplete\n     */\n    @Input() public get autocompleteItems(): TagModel[] {\n        const items = this._autocompleteItems;\n\n        if (!items) {\n            return [];\n        }\n\n        return items.map((item: TagModel) => {\n            return typeof item === 'string' ? {\n                [this.displayBy]: item,\n                [this.identifyBy]: item\n            } : item;\n        });\n    }\n\n    constructor(private readonly injector: Injector) {}\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        this.onItemClicked().subscribe((item: Ng2MenuItem) => {\n            this.requestAdding(item);\n        });\n\n        // reset itemsMatching array when the dropdown is hidden\n        this.onHide().subscribe(this.resetItems);\n\n        const DEBOUNCE_TIME = 200;\n        const KEEP_OPEN = this.keepOpen;\n\n        this.tagInput\n            .onTextChange\n            .asObservable()\n            .pipe(\n                debounceTime(DEBOUNCE_TIME),\n                filter((value: string) => {\n                    if (KEEP_OPEN === false) {\n                        return value.length > 0;\n                    }\n\n                    return true;\n                })\n            )\n            .subscribe(this.show);\n    }\n\n    /**\n     * @name updatePosition\n     */\n    public updatePosition(): void {\n        const position = this.tagInput.inputForm.getElementPosition();\n\n        this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n    }\n\n    /**\n     * @name isVisible\n     */\n    public get isVisible(): boolean {\n        return this.dropdown.menu.state.menuState.isVisible;\n    }\n\n    /**\n     * @name onHide\n     */\n    public onHide(): EventEmitter<Ng2Dropdown> {\n        return this.dropdown.onHide;\n    }\n\n    /**\n     * @name onItemClicked\n     */\n    public onItemClicked(): EventEmitter<string> {\n        return this.dropdown.onItemClicked;\n    }\n\n    /**\n     * @name selectedItem\n     */\n    public get selectedItem(): Ng2MenuItem {\n        return this.dropdown.menu.state.dropdownState.selectedItem;\n    }\n\n    /**\n     * @name state\n     */\n    public get state(): any {\n        return this.dropdown.menu.state;\n    }\n\n    /**\n     *\n     * @name show\n     */\n    public show = (): void => {\n        const maxItemsReached = this.tagInput.items.length === this.tagInput.maxItems;\n        const value = this.getFormValue();\n        const hasMinimumText = value.trim().length >= this.minimumTextLength;\n        const position = this.calculatePosition();\n        const items = this.getMatchingItems(value);\n        const hasItems = items.length > 0;\n        const isHidden = this.isVisible === false;\n        const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n        const isDisabled = this.tagInput.disable;\n\n        const shouldShow = isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n        const shouldHide = this.isVisible && !hasItems;\n\n        if (this.autocompleteObservable && hasMinimumText) {\n            return this.getItemsFromObservable(value);\n        }\n\n        if ((!this.showDropdownIfEmpty && !value) || maxItemsReached || isDisabled) {\n            return this.dropdown.hide();\n        }\n\n        this.setItems(items);\n\n        if (shouldShow) {\n            this.dropdown.show(position);\n        } else if (shouldHide) {\n            this.hide();\n        }\n    }\n\n    /**\n     * @name hide\n     */\n    public hide(): void {\n        this.resetItems();\n        this.dropdown.hide();\n    }\n\n    /**\n     * @name scrollListener\n     */\n    @HostListener('window:scroll')\n    public scrollListener(): void {\n        if (!this.isVisible || !this.dynamicUpdate) {\n            return;\n        }\n\n        this.updatePosition();\n    }\n\n    /**\n     * @name onWindowBlur\n     */\n    @HostListener('window:blur')\n    public onWindowBlur(): void {\n        this.dropdown.hide();\n    }\n\n    /**\n     * @name getFormValue\n     */\n    private getFormValue(): string {\n        const formValue = this.tagInput.formValue;\n        return formValue ? formValue.toString().trim() : '';\n    }\n\n    /**\n     * @name calculatePosition\n     */\n    private calculatePosition(): ClientRect {\n        return this.tagInput.inputForm.getElementPosition();\n    }\n\n    /**\n     * @name requestAdding\n     * @param item {Ng2MenuItem}\n     */\n    private requestAdding = async (item: Ng2MenuItem) => {\n        const tag = this.createTagModel(item);\n        await this.tagInput.onAddingRequested(true, tag).catch(() => {});\n    }\n\n    /**\n     * @name createTagModel\n     * @param item\n     */\n    private createTagModel(item: Ng2MenuItem): TagModel {\n        const display = typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n        const value = typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n\n        return {\n            ...item.value,\n            [this.tagInput.displayBy]: display,\n            [this.tagInput.identifyBy]: value\n        };\n    }\n\n    /**\n     *\n     * @param value {string}\n     */\n    private getMatchingItems(value: string): TagModel[] {\n        if (!value && !this.showDropdownIfEmpty) {\n            return [];\n        }\n\n        const dupesAllowed = this.tagInput.allowDupes;\n\n        return this.autocompleteItems.filter((item: TagModel) => {\n            const hasValue = dupesAllowed ? false : this.tagInput.tags.some(tag => {\n                const identifyBy = this.tagInput.identifyBy;\n                const model = typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n\n                return model === item[this.identifyBy];\n            });\n\n            return this.matchingFn(value, item) && (hasValue === false);\n        });\n    }\n\n    /**\n     * @name setItems\n     */\n    private setItems(items: TagModel[]): void {\n        this.items = items.slice(0, this.limitItemsTo || items.length);\n    }\n\n    /**\n     * @name resetItems\n     */\n    private resetItems = (): void => {\n        this.items = [];\n    }\n\n    /**\n     * @name populateItems\n     * @param data\n     */\n    private populateItems(data: any): TagInputDropdown {\n        this.autocompleteItems = data.map(item => {\n            return typeof item === 'string' ? {\n                [this.displayBy]: item,\n                [this.identifyBy]: item\n            } : item;\n        });\n\n        return this;\n    }\n\n    /**\n     * @name getItemsFromObservable\n     * @param text\n     */\n    private getItemsFromObservable = (text: string): void => {\n        this.setLoadingState(true);\n\n        const subscribeFn = (data: any[]) => {\n            // hide loading animation\n            this.setLoadingState(false)\n                // add items\n                .populateItems(data);\n\n            this.setItems(this.getMatchingItems(text));\n\n            if (this.items.length) {\n                this.dropdown.show(this.calculatePosition());\n            } else {\n                this.dropdown.hide();\n            }\n        };\n\n        this.autocompleteObservable(text)\n            .pipe(first())\n            .subscribe(subscribeFn, () => this.setLoadingState(false));\n    }\n\n    /**\n     * @name setLoadingState\n     * @param state\n     */\n    private setLoadingState(state: boolean): TagInputDropdown {\n        this.tagInput.isLoading = state;\n\n        return this;\n    }\n}\n",
    "import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {AsyncValidatorFn, FormControl, FormGroup, ValidatorFn} from '@angular/forms';\n\n@Component({\n    selector: 'tag-input-form',\n    styles: [`.dark tag:focus{-webkit-box-shadow:0 0 0 1px #323232;box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;-webkit-box-shadow:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;-webkit-box-shadow:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.4);box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{-webkit-box-shadow:inset 0 1px 1px #d9534f;box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;-webkit-transition:all .25s;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.minimal.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.dark.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.bootstrap.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.bootstrap3-info.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;padding:4px;cursor:text;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.ng2-tag-input__text-input{display:inline;vertical-align:middle;border:none;padding:0 .5rem;height:38px;font-size:1em;font-family:Roboto,\"Helvetica Neue\",sans-serif}.ng2-tag-input__text-input:focus{outline:0}.ng2-tag-input__text-input[disabled=true]{opacity:.5;background:#fff}`],\n    template: `<!-- form -->\n<form (ngSubmit)=\"submit($event)\" [formGroup]=\"form\">\n    <input #input\n\n           type=\"text\"\n           class=\"ng2-tag-input__text-input\"\n           autocomplete=\"off\"\n           tabindex=\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\"\n           minlength=\"1\"\n           formControlName=\"item\"\n\n           [ngClass]=\"inputClass\"\n           [attr.id]=\"inputId\"\n           [attr.placeholder]=\"placeholder\"\n           [attr.aria-label]=\"placeholder\"\n           [attr.tabindex]=\"tabindex\"\n           [attr.disabled]=\"disabled ? disabled : null\"\n\n           (focus)=\"onFocus.emit($event)\"\n           (blur)=\"onBlur.emit($event)\"\n           (keydown)=\"onKeyDown($event)\"\n           (keyup)=\"onKeyUp($event)\"\n    />\n</form>\n`\n})\nexport class TagInputForm implements OnInit, OnChanges {\n    /**\n     * @name onSubmit\n     */\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onBlur\n     */\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onFocus\n     */\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeyup\n     */\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeydown\n     */\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    // inputs\n\n    /**\n     * @name placeholder\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * @name validators\n     */\n    @Input() public validators: ValidatorFn[] = [];\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\n\n    /**\n     * @name inputId\n     */\n    @Input() public inputId: string;\n\n    /**\n     * @name inputClass\n     */\n    @Input() public inputClass: string;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex = '';\n\n    /**\n     * @name disabled\n     */\n    @Input() public disabled = false;\n\n    /**\n     * @name input\n     */\n    @ViewChild('input') public input;\n\n    /**\n     * @name form\n     */\n    public form: FormGroup;\n\n    /**\n     * @name inputText\n     */\n    @Input()\n    public get inputText(): string {\n        return this.item.value;\n    }\n\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    public set inputText(text: string) {\n        this.item.setValue(text);\n\n        this.inputTextChange.emit(text);\n    }\n\n    private readonly item: FormControl = new FormControl({value: '', disabled: this.disabled});\n\n    ngOnInit() {\n        this.item.setValidators(this.validators);\n        this.item.setAsyncValidators(this.asyncValidators);\n\n        // creating form\n        this.form = new FormGroup({\n            item: this.item\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (changes.disabled.currentValue) {\n                this.form.controls['item'].disable();\n            } else {\n                this.form.controls['item'].enable();\n            }\n        }\n    }\n\n    /**\n     * @name value\n     */\n    public get value(): FormControl {\n        return this.form.get('item') as FormControl;\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        const doc = typeof document !== 'undefined' ? document : undefined;\n        return doc ? doc.activeElement === this.input.nativeElement : false;\n    }\n\n    /**\n     * @name getErrorMessages\n     * @param messages\n     */\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        const {dirty, value, valid} = this.form;\n        return dirty && value.item && !valid;\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.input.nativeElement.blur();\n    }\n\n    /**\n     * @name getElementPosition\n     */\n    public getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    public destroy(): void {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    public onKeyDown($event) {\n        this.inputText = this.value.value;\n        if ($event.key === 'Enter') {\n            this.submit($event);\n\n            this.inputText = '';\n        }\n        return this.onKeydown.emit($event);\n    }\n\n    /**\n     * @name onKeyUp\n     * @param $event\n     */\n    public onKeyUp($event) {\n        this.inputText = this.value.value;\n        return this.onKeyup.emit($event);\n    }\n\n    /**\n     * @name submit\n     */\n    public submit($event: any): void {\n        $event.preventDefault();\n        if (this.form.valid) {\n            this.onSubmit.emit($event);\n        }\n    }\n}\n",
    "\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nexport function listen(listenerType: string, action: () => any, condition = true): void {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n",
    "import { ControlValueAccessor } from '@angular/forms';\nimport { Input } from '@angular/core';\nimport { OptionsProvider } from './providers/options-provider';\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\n\nexport class TagModelClass {\n    [key: string]: any;\n}\n\nexport type TagModel = string | TagModelClass;\n\nexport function isObject(obj: any): boolean {\n    return obj === Object(obj);\n}\n\nexport class TagInputAccessor implements ControlValueAccessor {\n    private _items: TagModel[] = [];\n    private _onTouchedCallback: () => void;\n    private _onChangeCallback: (items: TagModel[]) => void;\n\n    public dropdown: TagInputDropdown;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\n\n    public get items(): TagModel[] {\n        return this._items;\n    }\n\n    public set items(items: TagModel[]) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n\n    public onTouched() {\n        this._onTouchedCallback();\n    }\n\n    public writeValue(items: any[]) {\n        this._items = items || [];\n    }\n\n    public registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @name getItemValue\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemValue(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemDisplay\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n    protected getItemsWithout(index: number): TagModel[] {\n        return this.items.filter((item, position) => position !== index);\n    }\n}\n",
    "import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\n\nexport type Options = {\n    tagInput?: {\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\n    };\n    dropdown?: {\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\n    }\n}\n\nexport class OptionsProvider {\n    public static defaults = defaults;\n\n    public setOptions(options: Options): void {\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\n    }\n}\n\nexport { TagInputDropdownOptions, TagInputOptions };",
    "import { Observable } from 'rxjs';\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\n\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagModel } from './core/accessor';\n\nexport interface TagInputOptions {\n    separatorKeys: string[];\n    separatorKeyCodes: number[];\n    maxItems: number;\n    placeholder: string;\n    secondaryPlaceholder: string;\n    validators: ValidatorFn[];\n    asyncValidators: AsyncValidatorFn[];\n    onlyFromAutocomplete: boolean;\n    errorMessages: { [key: string]: string; };\n    theme: string;\n    onTextChangeDebounce: number;\n    inputId: string | null;\n    inputClass: string;\n    clearOnBlur: boolean;\n    hideForm: boolean;\n    addOnBlur: boolean;\n    addOnPaste: boolean;\n    pasteSplitPattern: string | RegExp;\n    blinkIfDupe: boolean;\n    removable: boolean;\n    editable: boolean;\n    allowDupes: boolean;\n    modelAsStrings: boolean;\n    trimTags: boolean;\n    ripple: boolean;\n    tabIndex: string;\n    disable: boolean;\n    dragZone: string;\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\n    displayBy: string;\n    identifyBy: string;\n    animationDuration: {\n        enter: string,\n        leave: string\n    };\n}\n\nexport interface TagInputDropdownOptions {\n    displayBy: string;\n    identifyBy: string;\n    appendToBody: boolean;\n    offset: string;\n    focusFirstElement: boolean;\n    showDropdownIfEmpty: boolean;\n    minimumTextLength: number;\n    limitItemsTo: number;\n    keepOpen: boolean;\n    zIndex: number;\n    dynamicUpdate: boolean;\n    matchingFn: (value: string, target: TagModel) => boolean;\n}\n\nexport const defaults = {\n    tagInput: <TagInputOptions>{\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: null,\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: '250ms',\n            leave: '150ms'\n        }\n    },\n    dropdown: <TagInputDropdownOptions>{\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        dynamicUpdate: true,\n        zIndex: 1000,\n        matchingFn\n    }\n};\n\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\n    const targetValue = target[this.displayBy].toString();\n\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n",
    "import { TagInputComponent } from '../../components/tag-input/tag-input';\nimport { TagModel } from '../accessor';\n\nimport { Injectable } from '@angular/core';\n\nexport declare interface DraggedTag {\n    index: number;\n    tag: TagModel;\n    zone: string;\n}\n\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\n\nexport declare interface State {\n    dragging: boolean,\n    dropping: boolean,\n    index: number | undefined\n}\n\nexport declare type StateProperty = keyof State;\n\n@Injectable()\nexport class DragProvider {\n    public sender: TagInputComponent;\n    public receiver: TagInputComponent;\n\n    public state: State = {\n        dragging: false,\n        dropping: false,\n        index: undefined\n    };\n\n    /**\n     * @name setDraggedItem\n     * @param event\n     * @param tag\n     */\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\n        event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n    }\n\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\n        const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n\n        try {\n            return JSON.parse(data) as DraggedTag;\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * @name setSender\n     * @param sender\n     */\n    public setSender(sender: TagInputComponent): void {\n        this.sender = sender;\n    }\n\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n    public setReceiver(receiver: TagInputComponent): void {\n        this.receiver = receiver;\n    }\n\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\n        this.onDragEnd();\n\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n\n    /**\n     * @name setState\n     * @param state\n     */\n    public setState(state: {[K in StateProperty]?: State[K]}): void {\n        this.state = {...this.state, ...state};\n    }\n\n    /**\n     * @name getState\n     * @param key\n     */\n    public getState(key?: StateProperty): State | State[StateProperty] {\n        return key ? this.state[key] : this.state;\n    }\n\n    /**\n     * @name onDragEnd\n     */\n    public onDragEnd(): void {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\n}\n",
    "/*\n** constants and default values for <tag-input>\n */\n\nexport const PLACEHOLDER = '+ Tag';\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\nexport const KEYDOWN = 'keydown';\nexport const KEYUP = 'keyup';\nexport const FOCUS = 'focus';\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\n\nexport const ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\n\nexport const KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\n\nexport const DRAG_AND_DROP_KEY = 'Text';\nexport const NEXT = 'NEXT';\nexport const PREV = 'PREV';\n\n",
    "import {Pipe, PipeTransform} from '@angular/core';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    public transform(value: string, arg: string): string {\n        if (!arg.trim()) {\n            return value;\n        }\n\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        } catch (e) {\n            return value;\n        }\n    }\n}\n"
  ],
  "names": [
    "constants.KEYDOWN",
    "constants.NEXT",
    "constants.PREV",
    "constants.ACTIONS_KEYS",
    "constants.KEY_PRESS_ACTIONS",
    "constants.MAX_ITEMS_WARNING",
    "tslib_1.__awaiter",
    "constants.KEYUP",
    "defaults",
    "tslib_1.__extends",
    "state"
  ],
  "mappings": "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"
}
