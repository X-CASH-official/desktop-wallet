/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, ElementRef, Renderer2, HostBinding, TemplateRef, ViewChild, ChangeDetectionStrategy, ContentChild, forwardRef, ChangeDetectorRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { FileUploadControl } from './../helpers/control.class';
import { FileUploadService } from './../services/file-upload.service';
import { TOUCHED } from './file-upload.component';
import { FileUploadAbstract } from './file-upload-abstract.component';
var SimpleFileUploadComponent = /** @class */ (function (_super) {
    tslib_1.__extends(SimpleFileUploadComponent, _super);
    function SimpleFileUploadComponent(fileUploadService, hostElementRef, renderer, cdr) {
        var _this = _super.call(this, hostElementRef, renderer, cdr) || this;
        _this.fileUploadService = fileUploadService;
        _this.control = null;
        _this.buttonRef = null;
        _this.placeholderRef = null;
        _this.onTouch = (/**
         * @return {?}
         */
        function () {
            _this.renderer.addClass(_this.hostElementRef.nativeElement, TOUCHED);
        });
        return _this;
    }
    Object.defineProperty(SimpleFileUploadComponent.prototype, "hasFiles", {
        get: /**
         * @return {?}
         */
        function () {
            return this.control.isListVisible && this.control.size > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleFileUploadComponent.prototype, "isInvalid", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.control.disabled && this.control.invalid;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    SimpleFileUploadComponent.prototype.onInputChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var input = (/** @type {?} */ ((event.target)));
        if (!this.control.disabled && input.files.length > 0) {
            this.control.setValue(Array.from(input.files));
            this.clearInputEl();
        }
        this.onTouch();
    };
    /**
     * @private
     * @return {?}
     */
    SimpleFileUploadComponent.prototype.clearInputEl = /**
     * @private
     * @return {?}
     */
    function () {
        this.input.nativeElement.value = null;
    };
    /**
     * model -> view changes
     */
    /**
     * model -> view changes
     * @param {?} files
     * @return {?}
     */
    SimpleFileUploadComponent.prototype.writeValue = /**
     * model -> view changes
     * @param {?} files
     * @return {?}
     */
    function (files) {
        if (files != null) {
            this.control.setValue(files);
        }
    };
    /**
     * register function which will be called on UI change
     * to update view -> model
     */
    /**
     * register function which will be called on UI change
     * to update view -> model
     * @param {?} fn
     * @return {?}
     */
    SimpleFileUploadComponent.prototype.registerOnChange = /**
     * register function which will be called on UI change
     * to update view -> model
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    SimpleFileUploadComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouch = fn;
    };
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    SimpleFileUploadComponent.prototype.setDisabledState = /**
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) {
        this.control.disable(isDisabled);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SimpleFileUploadComponent.prototype.onKeyDown = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.keyCode === 13 || event.keyCode === 32) {
            event.preventDefault();
            this.control.click();
        }
    };
    SimpleFileUploadComponent.decorators = [
        { type: Component, args: [{
                    selector: "file-upload[simple]",
                    template: "<div class=\"upload-text\">\r\n    <ng-template [ngIf]=\"control.valueChanges | async\">\r\n        <ng-container *ngTemplateOutlet=\"placeholderRef ? placeholderRef : defaultPlaceholderTemplate; context: { $implicit: control.value[0], control: control, file: control.value[0] }\"></ng-container>\r\n    </ng-template>\r\n    \r\n    <ng-template #defaultPlaceholderTemplate let-file>\r\n        <span *ngIf=\"file; else emptyList\" class=\"file-name\">{{ file.name }}</span>\r\n\r\n        <ng-template #emptyList>\r\n            Select a file...\r\n        </ng-template>\r\n    </ng-template>\r\n</div>\r\n\r\n<label #labelRef class=\"upload-button\" tabindex=\"0\" (keydown)=\"onKeyDown($event)\">\r\n    <ng-container *ngTemplateOutlet=\"buttonRef ? buttonRef : defaultButtonTemplate; context: { control: control }\"></ng-container>\r\n\r\n    <ng-template #defaultButtonTemplate>\r\n        <div class=\"button\">\r\n            <div class=\"icon\">\r\n                <svg viewBox=\"0 0 96 96\">\r\n                    <g>\r\n                        <path d=\"M62.8,68.1c0-0.6-0.2-1.1-0.6-1.5c-0.4-0.4-0.9-0.6-1.5-0.6s-1.1,0.2-1.5,0.6\r\n                            c-0.4,0.4-0.6,0.9-0.6,1.5c0,0.6,0.2,1.1,0.6,1.5c0.4,0.4,0.9,0.6,1.5,0.6s1.1-0.2,1.5-0.6S62.8,68.7,62.8,68.1z M71.3,68.1\r\n                            c0-0.6-0.2-1.1-0.6-1.5c-0.4-0.4-0.9-0.6-1.5-0.6c-0.6,0-1.1,0.2-1.5,0.6C67.2,67,67,67.5,67,68.1c0,0.6,0.2,1.1,0.6,1.5\r\n                            s0.9,0.6,1.5,0.6c0.6,0,1.1-0.2,1.5-0.6C71.1,69.2,71.3,68.7,71.3,68.1z M75.5,60.7v10.6c0,0.9-0.3,1.6-0.9,2.2\r\n                            c-0.6,0.6-1.4,0.9-2.2,0.9H23.7c-0.9,0-1.6-0.3-2.2-0.9c-0.6-0.6-0.9-1.4-0.9-2.2V60.7c0-0.9,0.3-1.6,0.9-2.2\r\n                            c0.6-0.6,1.4-0.9,2.2-0.9h14.1c0.5,1.2,1.2,2.2,2.3,3c1.1,0.8,2.3,1.2,3.7,1.2h8.5c1.3,0,2.6-0.4,3.7-1.2c1.1-0.8,1.9-1.8,2.3-3\r\n                            h14.1c0.9,0,1.6,0.3,2.2,0.9C75.2,59.1,75.5,59.8,75.5,60.7z M64.8,39.3c-0.4,0.9-1,1.3-2,1.3h-8.5v14.8c0,0.6-0.2,1.1-0.6,1.5\r\n                            c-0.4,0.4-0.9,0.6-1.5,0.6h-8.5c-0.6,0-1.1-0.2-1.5-0.6c-0.4-0.4-0.6-0.9-0.6-1.5V40.6h-8.5c-0.9,0-1.6-0.4-2-1.3\r\n                            c-0.4-0.9-0.2-1.6,0.5-2.3l14.8-14.8c0.4-0.4,0.9-0.6,1.5-0.6s1.1,0.2,1.5,0.6L64.3,37C65,37.7,65.1,38.4,64.8,39.3z\"/>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n            \r\n            <span class=\"button-text\">Browse</span>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <input #inputRef type=\"file\" class=\"files-input\" tabindex=\"-1\" (change)=\"onInputChange($event)\">\r\n</label>",
                    providers: [
                        FileUploadService,
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return SimpleFileUploadComponent; })),
                            multi: true
                        }
                    ],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [":host,:host>*{-webkit-box-sizing:border-box;box-sizing:border-box}:host{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:1.5;color:#555;background-color:#fff;border:1px solid #ddd;-webkit-border-radius:4px;border-radius:4px;-webkit-box-shadow:inset 0 4px 7px rgba(0,0,0,.05);box-shadow:inset 0 4px 7px rgba(0,0,0,.05)}:host(.disabled){opacity:.5}.files-input{width:.1px;height:.1px;opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden}.icon{height:24px;width:24px;display:inline-block}.icon svg{fill:#555}.upload-button{cursor:pointer;display:block;padding:2px 4px;background-color:#eee;border-left:1px solid #ddd;-webkit-border-radius:0 4px 4px 0;border-radius:0 4px 4px 0;min-width:100px;color:#555;margin:0;position:relative;outline:0}.upload-text{display:block;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;width:100%;padding:5px 10px;font-size:14px;height:30px}.button-text{vertical-align:middle;padding-left:10px}:host(.disabled) .upload-button{cursor:not-allowed}:host(:not(.disabled)) .upload-button:focus,:host(:not(.disabled)) .upload-button:hover{color:#80a9d2}:host(:not(.disabled)) .upload-button:focus svg,:host(:not(.disabled)) .upload-button:hover svg{fill:#80a9d2}"]
                }] }
    ];
    /** @nocollapse */
    SimpleFileUploadComponent.ctorParameters = function () { return [
        { type: FileUploadService },
        { type: ElementRef },
        { type: Renderer2 },
        { type: ChangeDetectorRef }
    ]; };
    SimpleFileUploadComponent.propDecorators = {
        control: [{ type: Input }],
        buttonRef: [{ type: ContentChild, args: ['button', { static: false },] }],
        placeholderRef: [{ type: ContentChild, args: ['placeholder', { static: false },] }],
        input: [{ type: ViewChild, args: ['inputRef', { static: true },] }],
        label: [{ type: ViewChild, args: ['labelRef', { static: true },] }],
        hasFiles: [{ type: HostBinding, args: ['class.has-files',] }],
        isInvalid: [{ type: HostBinding, args: ['class.ng-invalid',] }]
    };
    return SimpleFileUploadComponent;
}(FileUploadAbstract));
export { SimpleFileUploadComponent };
if (false) {
    /** @type {?} */
    SimpleFileUploadComponent.prototype.control;
    /** @type {?} */
    SimpleFileUploadComponent.prototype.buttonRef;
    /** @type {?} */
    SimpleFileUploadComponent.prototype.placeholderRef;
    /** @type {?} */
    SimpleFileUploadComponent.prototype.input;
    /** @type {?} */
    SimpleFileUploadComponent.prototype.label;
    /**
     * @type {?}
     * @private
     */
    SimpleFileUploadComponent.prototype.onTouch;
    /** @type {?} */
    SimpleFileUploadComponent.prototype.fileUploadService;
}
//# sourceMappingURL=data:application/json;base64,