import { ElementRef, Renderer2, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { FileUploadControl } from './../helpers/control.class';
import { FileUploadService } from './../services/file-upload.service';
import { FileUploadAbstract } from './file-upload-abstract.component';
export declare class SimpleFileUploadComponent extends FileUploadAbstract implements ControlValueAccessor {
    fileUploadService: FileUploadService;
    control: FileUploadControl;
    buttonRef: TemplateRef<any>;
    placeholderRef: TemplateRef<any>;
    input: ElementRef<HTMLInputElement>;
    label: ElementRef<HTMLLabelElement>;
    constructor(fileUploadService: FileUploadService, hostElementRef: ElementRef, renderer: Renderer2, cdr: ChangeDetectorRef);
    readonly hasFiles: boolean;
    readonly isInvalid: boolean;
    onInputChange(event: Event): void;
    private clearInputEl;
    /**
     * model -> view changes
     */
    writeValue(files: any): void;
    /**
     * register function which will be called on UI change
     * to update view -> model
     */
    registerOnChange(fn: (v: Array<File>) => void): void;
    private onTouch;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    onKeyDown(event: KeyboardEvent): void;
}
