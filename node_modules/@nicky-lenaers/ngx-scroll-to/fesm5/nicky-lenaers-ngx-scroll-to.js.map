{"version":3,"file":"nicky-lenaers-ngx-scroll-to.js.map","sources":["ng://@nicky-lenaers/ngx-scroll-to/src/app/modules/scroll-to/scroll-to-helpers.ts","ng://@nicky-lenaers/ngx-scroll-to/src/app/modules/scroll-to/scroll-to-animation.ts","ng://@nicky-lenaers/ngx-scroll-to/src/app/modules/scroll-to/scroll-to.service.ts","ng://@nicky-lenaers/ngx-scroll-to/src/app/modules/scroll-to/scroll-to.directive.ts","ng://@nicky-lenaers/ngx-scroll-to/src/app/modules/scroll-to/scroll-to.module.ts"],"sourcesContent":["import { ElementRef } from '@angular/core';\r\n\r\nimport { ScrollToAnimationEasingCollection } from './scroll-to-easing.interface';\r\nimport { ScrollToDefaultConfigOptions } from './scroll-to-config.interface';\r\n\r\n/** Default values for Component Input */\r\nexport const DEFAULTS: ScrollToDefaultConfigOptions = {\r\n  target: null,\r\n  action: 'click',\r\n  duration: 650,\r\n  easing: 'easeInOutQuad',\r\n  offset: 0,\r\n  offsetMap: new Map()\r\n};\r\n\r\n/** Easing Colleciton */\r\nexport const EASING: ScrollToAnimationEasingCollection = {\r\n  easeInQuad: (time: number) => {\r\n    return time * time;\r\n  },\r\n  easeOutQuad: (time: number) => {\r\n    return time * (2 - time);\r\n  },\r\n  easeInOutQuad: (time: number) => {\r\n    return time < 0.5 ? 2 * time * time : -1 + (4 - 2 * time) * time;\r\n  },\r\n  easeInCubic: (time: number) => {\r\n    return time * time * time;\r\n  },\r\n  easeOutCubic: (time: number) => {\r\n    return (--time) * time * time + 1;\r\n  },\r\n  easeInOutCubic: (time: number) => {\r\n    return time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;\r\n  },\r\n  easeInQuart: (time: number) => {\r\n    return time * time * time * time;\r\n  },\r\n  easeOutQuart: (time: number) => {\r\n    return 1 - (--time) * time * time * time;\r\n  },\r\n  easeInOutQuart: (time: number) => {\r\n    return time < 0.5 ? 8 * time * time * time * time : 1 - 8 * (--time) * time * time * time;\r\n  },\r\n  easeInQuint: (time: number) => {\r\n    return time * time * time * time * time;\r\n  },\r\n  easeOutQuint: (time: number) => {\r\n    return 1 + (--time) * time * time * time * time;\r\n  },\r\n  easeInOutQuint: (time: number) => {\r\n    return time < 0.5 ? 16 * time * time * time * time * time : 1 + 16 * (--time) * time * time * time * time;\r\n  },\r\n  easeOutElastic: (time: number) => {\r\n    return Math.pow(2, -10 * time) * Math.sin((time - 1 / 4) * (2 * Math.PI) / 1) + 1;\r\n  }\r\n};\r\n\r\n/**\r\n * Set of allowed events as triggers\r\n * for the Animation to start.\r\n */\r\nexport const EVENTS: string[] = [\r\n  'click',\r\n  'mouseenter',\r\n  'mouseover',\r\n  'mousedown',\r\n  'mouseup',\r\n  'dblclick',\r\n  'contextmenu',\r\n  'wheel',\r\n  'mouseleave',\r\n  'mouseout'\r\n];\r\n\r\n/**\r\n * Strip hash (#) from value.\r\n *\r\n * @param value \t\t\t\tThe given string value\r\n * @returns \t\t\t\t\tThe stripped string value\r\n */\r\nexport function stripHash(value: string): string {\r\n  return value.substring(0, 1) === '#' ? value.substring(1) : value;\r\n}\r\n\r\n/**\r\n * Test if a given value is a string.\r\n *\r\n * @param value \t\t\t\t\tThe given value\r\n * @returns \t\t\t\t\t\tWhether the given value is a string\r\n */\r\nexport function isString(value: any): value is string {\r\n  return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n/**\r\n * Test if a given Element is the Window.\r\n *\r\n * @param container \t\t\t\tThe given Element\r\n * @returns \t\t\t\t\t\tWhether the given Element is Window\r\n */\r\nexport function isWindow(container: any): container is Window {\r\n  return container === window;\r\n}\r\n\r\n/**\r\n * Test if a given value is of type ElementRef.\r\n *\r\n * @param value \t\t\t\t\tThe given value\r\n * @returns               Whether the given value is a number\r\n */\r\nexport function isElementRef(value: any): value is ElementRef {\r\n  return value instanceof ElementRef;\r\n}\r\n\r\n/**\r\n * Whether or not the given value is a Native Element.\r\n *\r\n * @param value           The given value\r\n * @returns               Whether or not the value is a Native Element\r\n */\r\nexport function isNativeElement(value: any): value is HTMLElement {\r\n  return value instanceof HTMLElement;\r\n}\r\n\r\n/**\r\n * Test if a given value is type number.\r\n *\r\n * @param value \t\t\t\t\tThe given value\r\n * @returns \t\t\t\t\t\tWhether the given value is a number\r\n */\r\nexport function isNumber(value: any): value is number {\r\n  return !isNaN(parseFloat(value)) && isFinite(value);\r\n}\r\n","import { Observable, ReplaySubject } from 'rxjs/index';\r\n\r\nimport { EASING } from './scroll-to-helpers';\r\nimport {\r\n  ScrollToConfigOptions,\r\n  ScrollToListenerTarget\r\n} from './scroll-to-config.interface';\r\n\r\n/** Scroll To Animation */\r\nexport class ScrollToAnimation {\r\n\r\n  /** Number of milliseconds for each Tick */\r\n  private _tick: number;\r\n\r\n  /** Interval */\r\n  private _interval: any;\r\n\r\n  /** Time Lapsed in milliseconds */\r\n  private _timeLapsed: number;\r\n\r\n  /** Percentage of time lapsed */\r\n  private _percentage: number;\r\n\r\n  /** Position of the Element */\r\n  private _position: number;\r\n\r\n  /** Last Element Position */\r\n  private _lastPosition: number;\r\n\r\n  /** Start Position of the Element */\r\n  private _startPosition: number;\r\n\r\n  /** The Distance to scroll */\r\n  private _distance: number;\r\n\r\n  /** Observable Source */\r\n  private _source$: ReplaySubject<number>;\r\n\r\n  /** Scroll Top of the Window */\r\n  private _windowScrollTop: number;\r\n\r\n  /** Mapped Offset taken from the active Offset Map */\r\n  private _mappedOffset: number;\r\n\r\n  /**\r\n   * Class Constructor.\r\n   *\r\n   * @param _container            The Container\r\n   * @param _listenerTarget       The Element that listens for DOM Events\r\n   * @param _isWindow             Whether or not the listener is the Window\r\n   * @param _to                   Position to scroll to\r\n   * @param _options              Additional options for scrolling\r\n   * @param _isBrowser            Whether or not execution runs in the browser\r\n   *                              (as opposed to the server)\r\n   */\r\n  constructor(\r\n    private _container: HTMLElement,\r\n    private _listenerTarget: ScrollToListenerTarget,\r\n    private readonly _isWindow: boolean,\r\n    private readonly _to: number,\r\n    private readonly _options: ScrollToConfigOptions,\r\n    private _isBrowser: boolean\r\n  ) {\r\n    this._tick = 16;\r\n    this._interval = null;\r\n    this._lastPosition = null;\r\n    this._timeLapsed = 0;\r\n\r\n    this._windowScrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\r\n\r\n    if (!this._container) {\r\n      this._startPosition = this._windowScrollTop;\r\n    } else {\r\n      this._startPosition = this._isWindow ? this._windowScrollTop : this._container.scrollTop;\r\n    }\r\n\r\n    // Correction for Starting Position of nested HTML Elements\r\n    if (this._container && !this._isWindow) {\r\n      this._to = this._to - this._container.getBoundingClientRect().top + this._startPosition;\r\n    }\r\n\r\n    // Set Distance\r\n    const directionalDistance = this._startPosition - this._to;\r\n    this._distance = this._container ? Math.abs(this._startPosition - this._to) : this._to;\r\n\r\n    this._mappedOffset = this._options.offset;\r\n\r\n    // Set offset from Offset Map\r\n    if (this._isBrowser) {\r\n      this._options\r\n        .offsetMap\r\n        .forEach((value, key) => this._mappedOffset = window.innerWidth > key ? value : this._mappedOffset);\r\n    }\r\n\r\n    this._distance += this._mappedOffset * (directionalDistance <= 0 ? 1 : -1);\r\n    this._source$ = new ReplaySubject();\r\n  }\r\n\r\n  /**\r\n   * Start the new Scroll Animation.\r\n   *\r\n   * @returns         Observable containing a number\r\n   */\r\n  public start(): Observable<number> {\r\n    clearInterval(this._interval);\r\n    this._interval = setInterval(this._loop, this._tick);\r\n    return this._source$.asObservable();\r\n  }\r\n\r\n  /** Recursively loop over the Scroll Animation */\r\n  private _loop = (): void => {\r\n\r\n    this._timeLapsed += this._tick;\r\n    this._percentage = (this._timeLapsed / this._options.duration);\r\n    this._percentage = (this._percentage > 1) ? 1 : this._percentage;\r\n\r\n    // Position Update\r\n    this._position = this._startPosition +\r\n      ((this._startPosition - this._to <= 0 ? 1 : -1) *\r\n        this._distance *\r\n        EASING[this._options.easing](this._percentage));\r\n\r\n    if (this._lastPosition !== null && this._position === this._lastPosition) {\r\n      this.stop();\r\n    } else {\r\n      this._source$.next(this._position);\r\n      this._isWindow\r\n        ? this._listenerTarget.scrollTo(0, Math.floor(this._position))\r\n        : this._container.scrollTop = Math.floor(this._position);\r\n      this._lastPosition = this._position;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop the current Scroll Animation Loop.\r\n   *\r\n   * @param force \t\t\t    Force to stop the Animation Loop\r\n   * @returns               Void\r\n   */\r\n  public stop(): void {\r\n    clearInterval(this._interval);\r\n    this._interval = null;\r\n    this._source$.complete();\r\n  }\r\n}\r\n","import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport {\r\n  ScrollToConfigOptions,\r\n  ScrollToTarget,\r\n  ScrollToListenerTarget,\r\n  ScrollToConfigOptionsTarget\r\n} from './scroll-to-config.interface';\r\nimport { ScrollToAnimation } from './scroll-to-animation';\r\nimport {\r\n  stripHash,\r\n  isString,\r\n  isNumber,\r\n  isElementRef,\r\n  isWindow,\r\n  DEFAULTS,\r\n  isNativeElement\r\n} from './scroll-to-helpers';\r\nimport { Observable, ReplaySubject, throwError } from 'rxjs/index';\r\n\r\n/**\r\n * The Scroll To Service handles starting, interrupting\r\n * and ending the actual Scroll Animation. It provides\r\n * some utilities to find the proper HTML Element on a\r\n * given page to setup Event Listeners and calculate\r\n * distances for the Animation.\r\n */\r\n@Injectable()\r\nexport class ScrollToService {\r\n\r\n  /**\r\n   * The animation that provides the scrolling\r\n   * to happen smoothly over time. Defining it here\r\n   * allows for usage of e.g. `start` and `stop`\r\n   * methods within this Angular Service.\r\n   */\r\n  private _animation: ScrollToAnimation;\r\n\r\n  /**\r\n   * Interruptive Events allow to scrolling animation\r\n   * to be interrupted before it is finished. The list\r\n   * of Interruptive Events represents those.\r\n   */\r\n  private _interruptiveEvents: string[];\r\n\r\n  /**\r\n   * Construct and setup required paratemeters.\r\n   *\r\n   * @param _document         A Reference to the Document\r\n   * @param _platformId       Angular Platform ID\r\n   */\r\n  constructor(\r\n    @Inject(DOCUMENT) private _document: any,\r\n    @Inject(PLATFORM_ID) private _platformId: any\r\n  ) {\r\n    this._interruptiveEvents = ['mousewheel', 'DOMMouseScroll', 'touchstart'];\r\n  }\r\n\r\n  /**\r\n   * Target an Element to scroll to. Notice that the `TimeOut` decorator\r\n   * ensures the executing to take place in the next Angular lifecycle.\r\n   * This allows for scrolling to elements that are e.g. initially hidden\r\n   * by means of `*ngIf`, but ought to be scrolled to eventually.\r\n   *\r\n   * @todo type 'any' in Observable should become custom type like 'ScrollToEvent' (base class), see issue comment:\r\n   * \t- https://github.com/nicky-lenaers/ngx-scroll-to/issues/10#issuecomment-317198481\r\n   *\r\n   * @param options         Configuration Object\r\n   * @returns               Observable\r\n   */\r\n  public scrollTo(options: ScrollToConfigOptions): Observable<any> {\r\n\r\n    if (!isPlatformBrowser(this._platformId)) return new ReplaySubject().asObservable();\r\n\r\n    return this._start(options);\r\n  }\r\n\r\n  /**\r\n   * Start a new Animation.\r\n   *\r\n   * @todo Emit proper events from subscription\r\n   *\r\n   * @param options         Configuration Object\r\n   * @returns               Observable\r\n   */\r\n  private _start(options: ScrollToConfigOptions): Observable<number> {\r\n\r\n    // Merge config with default values\r\n    const mergedConfigOptions = {\r\n      ...DEFAULTS as ScrollToConfigOptions,\r\n      ...options\r\n    } as ScrollToConfigOptionsTarget;\r\n\r\n    if (this._animation) this._animation.stop();\r\n\r\n    const targetNode = this._getNode(mergedConfigOptions.target);\r\n    if (mergedConfigOptions.target && !targetNode) return throwError('Unable to find Target Element');\r\n\r\n    const container: HTMLElement = this._getContainer(mergedConfigOptions, targetNode);\r\n    if (mergedConfigOptions.container && !container) return throwError('Unable to find Container Element');\r\n\r\n    const listenerTarget = this._getListenerTarget(container) || window;\r\n\r\n    let to = container ? container.getBoundingClientRect().top : 0;\r\n\r\n    if (targetNode) {\r\n      to = isWindow(listenerTarget) ? targetNode.offsetTop : targetNode.getBoundingClientRect().top;\r\n    }\r\n\r\n    // Create Animation\r\n    this._animation = new ScrollToAnimation(\r\n      container,\r\n      listenerTarget,\r\n      isWindow(listenerTarget),\r\n      to,\r\n      mergedConfigOptions,\r\n      isPlatformBrowser(this._platformId)\r\n    );\r\n    const onInterrupt = () => this._animation.stop();\r\n    this._addInterruptiveEventListeners(listenerTarget, onInterrupt);\r\n\r\n    // Start Animation\r\n    const animation$ = this._animation.start();\r\n    this._subscribeToAnimation(animation$, listenerTarget, onInterrupt);\r\n\r\n    return animation$;\r\n  }\r\n\r\n  /**\r\n   * Subscribe to the events emitted from the Scrolling\r\n   * Animation. Events might be used for e.g. unsubscribing\r\n   * once finished.\r\n   *\r\n   * @param animation$              The Animation Observable\r\n   * @param listenerTarget          The Listener Target for events\r\n   * @param onInterrupt             The handler for Interruptive Events\r\n   * @returns                       Void\r\n   */\r\n  private _subscribeToAnimation(\r\n    animation$: Observable<any>,\r\n    listenerTarget: ScrollToListenerTarget,\r\n    onInterrupt: EventListenerOrEventListenerObject\r\n  ) {\r\n    const subscription = animation$\r\n      .subscribe(\r\n        () => { },\r\n        () => { },\r\n        () => {\r\n          this._removeInterruptiveEventListeners(this._interruptiveEvents, listenerTarget, onInterrupt);\r\n          subscription.unsubscribe();\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Get the container HTML Element in which\r\n   * the scrolling should happen.\r\n   *\r\n   * @param options         The Merged Configuration Object\r\n   * @param targetNode    the targeted HTMLElement\r\n   * @returns\r\n   */\r\n  private _getContainer(options: ScrollToConfigOptions, targetNode: HTMLElement): HTMLElement | null {\r\n\r\n    let container: HTMLElement | null = null;\r\n\r\n    if (options.container) {\r\n      container = this._getNode(options.container, true);\r\n    } else if (targetNode) {\r\n      container = this._getFirstScrollableParent(targetNode);\r\n    }\r\n\r\n    return container;\r\n  }\r\n\r\n  /**\r\n   * Add listeners for the Animation Interruptive Events\r\n   * to the Listener Target.\r\n   *\r\n   * @param events            List of events to listen to\r\n   * @param listenerTarget    Target to attach the listener on\r\n   * @param handler           Handler for when the listener fires\r\n   * @returns                 Void\r\n   */\r\n  private _addInterruptiveEventListeners(\r\n    listenerTarget: ScrollToListenerTarget,\r\n    handler: EventListenerOrEventListenerObject): void {\r\n\r\n    if (!listenerTarget) listenerTarget = window;\r\n\r\n    this._interruptiveEvents\r\n      .forEach(event => listenerTarget\r\n        .addEventListener(event, handler, this._supportPassive() ? { passive: true } : false));\r\n  }\r\n\r\n  /**\r\n   * Feature-detect support for passive event listeners.\r\n   *\r\n   * @returns       Whether or not passive event listeners are supported\r\n   */\r\n  private _supportPassive(): boolean {\r\n\r\n    let supportsPassive = false;\r\n\r\n    try {\r\n      const opts = Object.defineProperty({}, 'passive', {\r\n        get: function () {\r\n          supportsPassive = true;\r\n        }\r\n      });\r\n      window.addEventListener('testPassive', null, opts);\r\n      window.removeEventListener('testPassive', null, opts);\r\n    } catch (e) { }\r\n\r\n    return supportsPassive;\r\n  }\r\n\r\n  /**\r\n   * Remove listeners for the Animation Interrupt Event from\r\n   * the Listener Target. Specifying the correct handler prevents\r\n   * memory leaks and makes the allocated memory available for\r\n   * Garbage Collection.\r\n   *\r\n   * @param events            List of Interruptive Events to remove\r\n   * @param listenerTarget    Target to attach the listener on\r\n   * @param handler           Handler for when the listener fires\r\n   * @returns                 Void\r\n   */\r\n  private _removeInterruptiveEventListeners(\r\n    events: string[],\r\n    listenerTarget: ScrollToListenerTarget,\r\n    handler: EventListenerOrEventListenerObject): void {\r\n\r\n    if (!listenerTarget) listenerTarget = window;\r\n    events.forEach(event => listenerTarget.removeEventListener(event, handler));\r\n  }\r\n\r\n  /**\r\n   * Find the first scrollable parent Node of a given\r\n   * Element. The DOM Tree gets searched upwards\r\n   * to find this first scrollable parent. Parents might\r\n   * be ignored by CSS styles applied to the HTML Element.\r\n   *\r\n   * @param nativeElement     The Element to search the DOM Tree upwards from\r\n   * @returns                 The first scrollable parent HTML Element\r\n   */\r\n  private _getFirstScrollableParent(nativeElement: HTMLElement): HTMLElement {\r\n\r\n    let style: CSSStyleDeclaration = window.getComputedStyle(nativeElement);\r\n\r\n    const overflowRegex: RegExp = /(auto|scroll|overlay)/;\r\n\r\n    if (style.position === 'fixed') return null;\r\n\r\n    for (let parent = nativeElement; parent = parent.parentElement; null) {\r\n\r\n      style = window.getComputedStyle(parent);\r\n\r\n      if (style.position === 'absolute'\r\n        || style.overflow === 'hidden'\r\n        || style.overflowY === 'hidden') continue;\r\n\r\n      if (overflowRegex.test(style.overflow + style.overflowY)\r\n        || parent.tagName === 'BODY') return parent;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get the Target Node to scroll to.\r\n   *\r\n   * @param id              The given ID of the node, either a string or\r\n   *                        an element reference\r\n   * @param allowBodyTag    Indicate whether or not the Document Body is\r\n   *                        considered a valid Target Node\r\n   * @returns               The Target Node to scroll to\r\n   */\r\n  private _getNode(id: ScrollToTarget, allowBodyTag: boolean = false): HTMLElement {\r\n\r\n    let targetNode: HTMLElement;\r\n\r\n    if (isString(id)) {\r\n      if (allowBodyTag && (id === 'body' || id === 'BODY')) {\r\n        targetNode = this._document.body;\r\n      } else {\r\n        targetNode = this._document.getElementById(stripHash(id));\r\n      }\r\n    } else if (isNumber(id)) {\r\n      targetNode = this._document.getElementById(String(id));\r\n    } else if (isElementRef(id)) {\r\n      targetNode = id.nativeElement;\r\n    } else if (isNativeElement(id)) {\r\n      targetNode = id;\r\n    }\r\n\r\n    return targetNode;\r\n  }\r\n\r\n  /**\r\n   * Retrieve the Listener target. This Listener Target is used\r\n   * to attach Event Listeners on. In case of the target being\r\n   * the Document Body, we need the actual `window` to listen\r\n   * for events.\r\n   *\r\n   * @param container           The HTML Container element\r\n   * @returns                   The Listener Target to attach events on\r\n   */\r\n  private _getListenerTarget(container: HTMLElement): ScrollToListenerTarget {\r\n    if (!container) return null;\r\n    return this._isDocumentBody(container) ? window : container;\r\n  }\r\n\r\n  /**\r\n   * Test if a given HTML Element is the Document Body.\r\n   *\r\n   * @param element             The given HTML Element\r\n   * @returns                   Whether or not the Element is the\r\n   *                            Document Body Element\r\n   */\r\n  private _isDocumentBody(element: HTMLElement): element is HTMLBodyElement {\r\n    return element.tagName.toUpperCase() === 'BODY';\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  ElementRef,\r\n  Renderer2,\r\n  AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport {\r\n  DEFAULTS,\r\n  EVENTS\r\n} from './scroll-to-helpers';\r\nimport {\r\n  ScrollToConfigOptions,\r\n  ScrollToOffsetMap,\r\n  ScrollToTarget\r\n} from './scroll-to-config.interface';\r\nimport {\r\n  ScrollToAnimationEasing\r\n} from './scroll-to-easing.interface';\r\nimport { ScrollToEvent } from './scroll-to-event.interface';\r\nimport { ScrollToService } from './scroll-to.service';\r\n\r\n@Directive({\r\n  selector: '[ngx-scroll-to]'\r\n})\r\nexport class ScrollToDirective implements AfterViewInit {\r\n\r\n  @Input('ngx-scroll-to')\r\n  public ngxScrollTo: ScrollToTarget = DEFAULTS.target;\r\n\r\n  @Input('ngx-scroll-to-event')\r\n  public ngxScrollToEvent: ScrollToEvent = DEFAULTS.action;\r\n\r\n  @Input('ngx-scroll-to-duration')\r\n  public ngxScrollToDuration: number = DEFAULTS.duration;\r\n\r\n  @Input('ngx-scroll-to-easing')\r\n  public ngxScrollToEasing: ScrollToAnimationEasing = DEFAULTS.easing;\r\n\r\n  @Input('ngx-scroll-to-offset')\r\n  public ngxScrollToOffset: number = DEFAULTS.offset;\r\n\r\n  @Input('ngx-scroll-to-offset-map')\r\n  public ngxScrollToOffsetMap: ScrollToOffsetMap = DEFAULTS.offsetMap;\r\n\r\n  private _options: ScrollToConfigOptions;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _scrollToService: ScrollToService,\r\n    private _renderer2: Renderer2) { }\r\n\r\n  /**\r\n   * Angular Lifecycle Hook - After View Init\r\n   *\r\n   * @todo Implement Subscription for Events\r\n   *\r\n   * @returns void\r\n   */\r\n  public ngAfterViewInit(): void {\r\n\r\n    // Test Event Support\r\n    if (EVENTS.indexOf(this.ngxScrollToEvent) === -1) throw new Error(`Unsupported Event '${this.ngxScrollToEvent}'`);\r\n\r\n    // Listen for the trigger...\r\n    this._renderer2.listen(this._elementRef.nativeElement, this.ngxScrollToEvent,\r\n      (event: Event) => {\r\n\r\n        this._options = {\r\n          target: this.ngxScrollTo,\r\n          duration: this.ngxScrollToDuration,\r\n          easing: this.ngxScrollToEasing,\r\n          offset: this.ngxScrollToOffset,\r\n          offsetMap: this.ngxScrollToOffsetMap\r\n        };\r\n\r\n        this._scrollToService.scrollTo(this._options);\r\n      });\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ScrollToDirective } from './scroll-to.directive';\r\nimport { ScrollToService } from './scroll-to.service';\r\n\r\n/** Scroll To Module */\r\n@NgModule({\r\n  declarations: [\r\n    ScrollToDirective\r\n  ],\r\n  exports: [\r\n    ScrollToDirective\r\n  ]\r\n})\r\nexport class ScrollToModule {\r\n\r\n  /**\r\n   * Guaranteed singletons for provided Services across App.\r\n   *\r\n   * @return          An Angular Module with Providers\r\n   */\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: ScrollToModule,\r\n      providers: [\r\n        ScrollToService\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":["tslib_1.__assign"],"mappings":"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"}
