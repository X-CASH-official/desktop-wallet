{"version":3,"sources":["ng://@nicky-lenaers/ngx-scroll-to/src/app/modules/scroll-to/scroll-to-helpers.ts","node_modules/tslib/tslib.es6.js","ng://@nicky-lenaers/ngx-scroll-to/src/app/modules/scroll-to/scroll-to-animation.ts","ng://@nicky-lenaers/ngx-scroll-to/src/app/modules/scroll-to/scroll-to.service.ts","ng://@nicky-lenaers/ngx-scroll-to/src/app/modules/scroll-to/scroll-to.directive.ts","ng://@nicky-lenaers/ngx-scroll-to/src/app/modules/scroll-to/scroll-to.module.ts"],"names":["DEFAULTS","target","action","duration","easing","offset","offsetMap","Map","EASING","easeInQuad","time","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeOutElastic","Math","pow","sin","PI","EVENTS","isWindow","container","window","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","ScrollToAnimation","_container","_listenerTarget","_isWindow","_to","_options","_isBrowser","_this","this","_timeLapsed","_tick","_percentage","_position","_startPosition","_distance","_lastPosition","stop","_source$","next","scrollTo","floor","scrollTop","_interval","_windowScrollTop","pageYOffset","document","documentElement","body","getBoundingClientRect","top","directionalDistance","abs","_mappedOffset","forEach","value","key","innerWidth","ReplaySubject","start","clearInterval","setInterval","_loop","asObservable","complete","ScrollToService","_document","_platformId","_interruptiveEvents","options","isPlatformBrowser","_start","mergedConfigOptions","tslib_1.__assign","_animation","targetNode","_getNode","throwError","_getContainer","listenerTarget","_getListenerTarget","to","offsetTop","onInterrupt","_addInterruptiveEventListeners","animation$","_subscribeToAnimation","subscription","subscribe","_removeInterruptiveEventListeners","unsubscribe","_getFirstScrollableParent","handler","event","addEventListener","_supportPassive","passive","supportsPassive","opts","defineProperty","get","removeEventListener","e","events","nativeElement","style","getComputedStyle","overflowRegex","position","parent_1","parentElement","overflow","overflowY","test","tagName","id","allowBodyTag","isString","String","isNumber","isNaN","parseFloat","isFinite","isElementRef","ElementRef","isNativeElement","HTMLElement","getElementById","stripHash","substring","_isDocumentBody","element","toUpperCase","Injectable","Inject","args","DOCUMENT","PLATFORM_ID","ScrollToDirective","_elementRef","_scrollToService","_renderer2","ngAfterViewInit","indexOf","ngxScrollToEvent","Error","listen","ngxScrollTo","ngxScrollToDuration","ngxScrollToEasing","ngxScrollToOffset","ngxScrollToOffsetMap","Directive","selector","Renderer2","Input","ScrollToModule","forRoot","ngModule","providers","NgModule","declarations","exports"],"mappings":"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","sourcesContent":["import { ElementRef } from '@angular/core';\r\n\r\nimport { ScrollToAnimationEasingCollection } from './scroll-to-easing.interface';\r\nimport { ScrollToDefaultConfigOptions } from './scroll-to-config.interface';\r\n\r\n/** Default values for Component Input */\r\nexport const DEFAULTS: ScrollToDefaultConfigOptions = {\r\n  target: null,\r\n  action: 'click',\r\n  duration: 650,\r\n  easing: 'easeInOutQuad',\r\n  offset: 0,\r\n  offsetMap: new Map()\r\n};\r\n\r\n/** Easing Colleciton */\r\nexport const EASING: ScrollToAnimationEasingCollection = {\r\n  easeInQuad: (time: number) => {\r\n    return time * time;\r\n  },\r\n  easeOutQuad: (time: number) => {\r\n    return time * (2 - time);\r\n  },\r\n  easeInOutQuad: (time: number) => {\r\n    return time < 0.5 ? 2 * time * time : -1 + (4 - 2 * time) * time;\r\n  },\r\n  easeInCubic: (time: number) => {\r\n    return time * time * time;\r\n  },\r\n  easeOutCubic: (time: number) => {\r\n    return (--time) * time * time + 1;\r\n  },\r\n  easeInOutCubic: (time: number) => {\r\n    return time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;\r\n  },\r\n  easeInQuart: (time: number) => {\r\n    return time * time * time * time;\r\n  },\r\n  easeOutQuart: (time: number) => {\r\n    return 1 - (--time) * time * time * time;\r\n  },\r\n  easeInOutQuart: (time: number) => {\r\n    return time < 0.5 ? 8 * time * time * time * time : 1 - 8 * (--time) * time * time * time;\r\n  },\r\n  easeInQuint: (time: number) => {\r\n    return time * time * time * time * time;\r\n  },\r\n  easeOutQuint: (time: number) => {\r\n    return 1 + (--time) * time * time * time * time;\r\n  },\r\n  easeInOutQuint: (time: number) => {\r\n    return time < 0.5 ? 16 * time * time * time * time * time : 1 + 16 * (--time) * time * time * time * time;\r\n  },\r\n  easeOutElastic: (time: number) => {\r\n    return Math.pow(2, -10 * time) * Math.sin((time - 1 / 4) * (2 * Math.PI) / 1) + 1;\r\n  }\r\n};\r\n\r\n/**\r\n * Set of allowed events as triggers\r\n * for the Animation to start.\r\n */\r\nexport const EVENTS: string[] = [\r\n  'click',\r\n  'mouseenter',\r\n  'mouseover',\r\n  'mousedown',\r\n  'mouseup',\r\n  'dblclick',\r\n  'contextmenu',\r\n  'wheel',\r\n  'mouseleave',\r\n  'mouseout'\r\n];\r\n\r\n/**\r\n * Strip hash (#) from value.\r\n *\r\n * @param value \t\t\t\tThe given string value\r\n * @returns \t\t\t\t\tThe stripped string value\r\n */\r\nexport function stripHash(value: string): string {\r\n  return value.substring(0, 1) === '#' ? value.substring(1) : value;\r\n}\r\n\r\n/**\r\n * Test if a given value is a string.\r\n *\r\n * @param value \t\t\t\t\tThe given value\r\n * @returns \t\t\t\t\t\tWhether the given value is a string\r\n */\r\nexport function isString(value: any): value is string {\r\n  return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n/**\r\n * Test if a given Element is the Window.\r\n *\r\n * @param container \t\t\t\tThe given Element\r\n * @returns \t\t\t\t\t\tWhether the given Element is Window\r\n */\r\nexport function isWindow(container: any): container is Window {\r\n  return container === window;\r\n}\r\n\r\n/**\r\n * Test if a given value is of type ElementRef.\r\n *\r\n * @param value \t\t\t\t\tThe given value\r\n * @returns               Whether the given value is a number\r\n */\r\nexport function isElementRef(value: any): value is ElementRef {\r\n  return value instanceof ElementRef;\r\n}\r\n\r\n/**\r\n * Whether or not the given value is a Native Element.\r\n *\r\n * @param value           The given value\r\n * @returns               Whether or not the value is a Native Element\r\n */\r\nexport function isNativeElement(value: any): value is HTMLElement {\r\n  return value instanceof HTMLElement;\r\n}\r\n\r\n/**\r\n * Test if a given value is type number.\r\n *\r\n * @param value \t\t\t\t\tThe given value\r\n * @returns \t\t\t\t\t\tWhether the given value is a number\r\n */\r\nexport function isNumber(value: any): value is number {\r\n  return !isNaN(parseFloat(value)) && isFinite(value);\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable, ReplaySubject } from 'rxjs/index';\r\n\r\nimport { EASING } from './scroll-to-helpers';\r\nimport {\r\n  ScrollToConfigOptions,\r\n  ScrollToListenerTarget\r\n} from './scroll-to-config.interface';\r\n\r\n/** Scroll To Animation */\r\nexport class ScrollToAnimation {\r\n\r\n  /** Number of milliseconds for each Tick */\r\n  private _tick: number;\r\n\r\n  /** Interval */\r\n  private _interval: any;\r\n\r\n  /** Time Lapsed in milliseconds */\r\n  private _timeLapsed: number;\r\n\r\n  /** Percentage of time lapsed */\r\n  private _percentage: number;\r\n\r\n  /** Position of the Element */\r\n  private _position: number;\r\n\r\n  /** Last Element Position */\r\n  private _lastPosition: number;\r\n\r\n  /** Start Position of the Element */\r\n  private _startPosition: number;\r\n\r\n  /** The Distance to scroll */\r\n  private _distance: number;\r\n\r\n  /** Observable Source */\r\n  private _source$: ReplaySubject<number>;\r\n\r\n  /** Scroll Top of the Window */\r\n  private _windowScrollTop: number;\r\n\r\n  /** Mapped Offset taken from the active Offset Map */\r\n  private _mappedOffset: number;\r\n\r\n  /**\r\n   * Class Constructor.\r\n   *\r\n   * @param _container            The Container\r\n   * @param _listenerTarget       The Element that listens for DOM Events\r\n   * @param _isWindow             Whether or not the listener is the Window\r\n   * @param _to                   Position to scroll to\r\n   * @param _options              Additional options for scrolling\r\n   * @param _isBrowser            Whether or not execution runs in the browser\r\n   *                              (as opposed to the server)\r\n   */\r\n  constructor(\r\n    private _container: HTMLElement,\r\n    private _listenerTarget: ScrollToListenerTarget,\r\n    private readonly _isWindow: boolean,\r\n    private readonly _to: number,\r\n    private readonly _options: ScrollToConfigOptions,\r\n    private _isBrowser: boolean\r\n  ) {\r\n    this._tick = 16;\r\n    this._interval = null;\r\n    this._lastPosition = null;\r\n    this._timeLapsed = 0;\r\n\r\n    this._windowScrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\r\n\r\n    if (!this._container) {\r\n      this._startPosition = this._windowScrollTop;\r\n    } else {\r\n      this._startPosition = this._isWindow ? this._windowScrollTop : this._container.scrollTop;\r\n    }\r\n\r\n    // Correction for Starting Position of nested HTML Elements\r\n    if (this._container && !this._isWindow) {\r\n      this._to = this._to - this._container.getBoundingClientRect().top + this._startPosition;\r\n    }\r\n\r\n    // Set Distance\r\n    const directionalDistance = this._startPosition - this._to;\r\n    this._distance = this._container ? Math.abs(this._startPosition - this._to) : this._to;\r\n\r\n    this._mappedOffset = this._options.offset;\r\n\r\n    // Set offset from Offset Map\r\n    if (this._isBrowser) {\r\n      this._options\r\n        .offsetMap\r\n        .forEach((value, key) => this._mappedOffset = window.innerWidth > key ? value : this._mappedOffset);\r\n    }\r\n\r\n    this._distance += this._mappedOffset * (directionalDistance <= 0 ? 1 : -1);\r\n    this._source$ = new ReplaySubject();\r\n  }\r\n\r\n  /**\r\n   * Start the new Scroll Animation.\r\n   *\r\n   * @returns         Observable containing a number\r\n   */\r\n  public start(): Observable<number> {\r\n    clearInterval(this._interval);\r\n    this._interval = setInterval(this._loop, this._tick);\r\n    return this._source$.asObservable();\r\n  }\r\n\r\n  /** Recursively loop over the Scroll Animation */\r\n  private _loop = (): void => {\r\n\r\n    this._timeLapsed += this._tick;\r\n    this._percentage = (this._timeLapsed / this._options.duration);\r\n    this._percentage = (this._percentage > 1) ? 1 : this._percentage;\r\n\r\n    // Position Update\r\n    this._position = this._startPosition +\r\n      ((this._startPosition - this._to <= 0 ? 1 : -1) *\r\n        this._distance *\r\n        EASING[this._options.easing](this._percentage));\r\n\r\n    if (this._lastPosition !== null && this._position === this._lastPosition) {\r\n      this.stop();\r\n    } else {\r\n      this._source$.next(this._position);\r\n      this._isWindow\r\n        ? this._listenerTarget.scrollTo(0, Math.floor(this._position))\r\n        : this._container.scrollTop = Math.floor(this._position);\r\n      this._lastPosition = this._position;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop the current Scroll Animation Loop.\r\n   *\r\n   * @param force \t\t\t    Force to stop the Animation Loop\r\n   * @returns               Void\r\n   */\r\n  public stop(): void {\r\n    clearInterval(this._interval);\r\n    this._interval = null;\r\n    this._source$.complete();\r\n  }\r\n}\r\n","import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport {\r\n  ScrollToConfigOptions,\r\n  ScrollToTarget,\r\n  ScrollToListenerTarget,\r\n  ScrollToConfigOptionsTarget\r\n} from './scroll-to-config.interface';\r\nimport { ScrollToAnimation } from './scroll-to-animation';\r\nimport {\r\n  stripHash,\r\n  isString,\r\n  isNumber,\r\n  isElementRef,\r\n  isWindow,\r\n  DEFAULTS,\r\n  isNativeElement\r\n} from './scroll-to-helpers';\r\nimport { Observable, ReplaySubject, throwError } from 'rxjs/index';\r\n\r\n/**\r\n * The Scroll To Service handles starting, interrupting\r\n * and ending the actual Scroll Animation. It provides\r\n * some utilities to find the proper HTML Element on a\r\n * given page to setup Event Listeners and calculate\r\n * distances for the Animation.\r\n */\r\n@Injectable()\r\nexport class ScrollToService {\r\n\r\n  /**\r\n   * The animation that provides the scrolling\r\n   * to happen smoothly over time. Defining it here\r\n   * allows for usage of e.g. `start` and `stop`\r\n   * methods within this Angular Service.\r\n   */\r\n  private _animation: ScrollToAnimation;\r\n\r\n  /**\r\n   * Interruptive Events allow to scrolling animation\r\n   * to be interrupted before it is finished. The list\r\n   * of Interruptive Events represents those.\r\n   */\r\n  private _interruptiveEvents: string[];\r\n\r\n  /**\r\n   * Construct and setup required paratemeters.\r\n   *\r\n   * @param _document         A Reference to the Document\r\n   * @param _platformId       Angular Platform ID\r\n   */\r\n  constructor(\r\n    @Inject(DOCUMENT) private _document: any,\r\n    @Inject(PLATFORM_ID) private _platformId: any\r\n  ) {\r\n    this._interruptiveEvents = ['mousewheel', 'DOMMouseScroll', 'touchstart'];\r\n  }\r\n\r\n  /**\r\n   * Target an Element to scroll to. Notice that the `TimeOut` decorator\r\n   * ensures the executing to take place in the next Angular lifecycle.\r\n   * This allows for scrolling to elements that are e.g. initially hidden\r\n   * by means of `*ngIf`, but ought to be scrolled to eventually.\r\n   *\r\n   * @todo type 'any' in Observable should become custom type like 'ScrollToEvent' (base class), see issue comment:\r\n   * \t- https://github.com/nicky-lenaers/ngx-scroll-to/issues/10#issuecomment-317198481\r\n   *\r\n   * @param options         Configuration Object\r\n   * @returns               Observable\r\n   */\r\n  public scrollTo(options: ScrollToConfigOptions): Observable<any> {\r\n\r\n    if (!isPlatformBrowser(this._platformId)) return new ReplaySubject().asObservable();\r\n\r\n    return this._start(options);\r\n  }\r\n\r\n  /**\r\n   * Start a new Animation.\r\n   *\r\n   * @todo Emit proper events from subscription\r\n   *\r\n   * @param options         Configuration Object\r\n   * @returns               Observable\r\n   */\r\n  private _start(options: ScrollToConfigOptions): Observable<number> {\r\n\r\n    // Merge config with default values\r\n    const mergedConfigOptions = {\r\n      ...DEFAULTS as ScrollToConfigOptions,\r\n      ...options\r\n    } as ScrollToConfigOptionsTarget;\r\n\r\n    if (this._animation) this._animation.stop();\r\n\r\n    const targetNode = this._getNode(mergedConfigOptions.target);\r\n    if (mergedConfigOptions.target && !targetNode) return throwError('Unable to find Target Element');\r\n\r\n    const container: HTMLElement = this._getContainer(mergedConfigOptions, targetNode);\r\n    if (mergedConfigOptions.container && !container) return throwError('Unable to find Container Element');\r\n\r\n    const listenerTarget = this._getListenerTarget(container) || window;\r\n\r\n    let to = container ? container.getBoundingClientRect().top : 0;\r\n\r\n    if (targetNode) {\r\n      to = isWindow(listenerTarget) ? targetNode.offsetTop : targetNode.getBoundingClientRect().top;\r\n    }\r\n\r\n    // Create Animation\r\n    this._animation = new ScrollToAnimation(\r\n      container,\r\n      listenerTarget,\r\n      isWindow(listenerTarget),\r\n      to,\r\n      mergedConfigOptions,\r\n      isPlatformBrowser(this._platformId)\r\n    );\r\n    const onInterrupt = () => this._animation.stop();\r\n    this._addInterruptiveEventListeners(listenerTarget, onInterrupt);\r\n\r\n    // Start Animation\r\n    const animation$ = this._animation.start();\r\n    this._subscribeToAnimation(animation$, listenerTarget, onInterrupt);\r\n\r\n    return animation$;\r\n  }\r\n\r\n  /**\r\n   * Subscribe to the events emitted from the Scrolling\r\n   * Animation. Events might be used for e.g. unsubscribing\r\n   * once finished.\r\n   *\r\n   * @param animation$              The Animation Observable\r\n   * @param listenerTarget          The Listener Target for events\r\n   * @param onInterrupt             The handler for Interruptive Events\r\n   * @returns                       Void\r\n   */\r\n  private _subscribeToAnimation(\r\n    animation$: Observable<any>,\r\n    listenerTarget: ScrollToListenerTarget,\r\n    onInterrupt: EventListenerOrEventListenerObject\r\n  ) {\r\n    const subscription = animation$\r\n      .subscribe(\r\n        () => { },\r\n        () => { },\r\n        () => {\r\n          this._removeInterruptiveEventListeners(this._interruptiveEvents, listenerTarget, onInterrupt);\r\n          subscription.unsubscribe();\r\n        }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Get the container HTML Element in which\r\n   * the scrolling should happen.\r\n   *\r\n   * @param options         The Merged Configuration Object\r\n   * @param targetNode    the targeted HTMLElement\r\n   * @returns\r\n   */\r\n  private _getContainer(options: ScrollToConfigOptions, targetNode: HTMLElement): HTMLElement | null {\r\n\r\n    let container: HTMLElement | null = null;\r\n\r\n    if (options.container) {\r\n      container = this._getNode(options.container, true);\r\n    } else if (targetNode) {\r\n      container = this._getFirstScrollableParent(targetNode);\r\n    }\r\n\r\n    return container;\r\n  }\r\n\r\n  /**\r\n   * Add listeners for the Animation Interruptive Events\r\n   * to the Listener Target.\r\n   *\r\n   * @param events            List of events to listen to\r\n   * @param listenerTarget    Target to attach the listener on\r\n   * @param handler           Handler for when the listener fires\r\n   * @returns                 Void\r\n   */\r\n  private _addInterruptiveEventListeners(\r\n    listenerTarget: ScrollToListenerTarget,\r\n    handler: EventListenerOrEventListenerObject): void {\r\n\r\n    if (!listenerTarget) listenerTarget = window;\r\n\r\n    this._interruptiveEvents\r\n      .forEach(event => listenerTarget\r\n        .addEventListener(event, handler, this._supportPassive() ? { passive: true } : false));\r\n  }\r\n\r\n  /**\r\n   * Feature-detect support for passive event listeners.\r\n   *\r\n   * @returns       Whether or not passive event listeners are supported\r\n   */\r\n  private _supportPassive(): boolean {\r\n\r\n    let supportsPassive = false;\r\n\r\n    try {\r\n      const opts = Object.defineProperty({}, 'passive', {\r\n        get: function () {\r\n          supportsPassive = true;\r\n        }\r\n      });\r\n      window.addEventListener('testPassive', null, opts);\r\n      window.removeEventListener('testPassive', null, opts);\r\n    } catch (e) { }\r\n\r\n    return supportsPassive;\r\n  }\r\n\r\n  /**\r\n   * Remove listeners for the Animation Interrupt Event from\r\n   * the Listener Target. Specifying the correct handler prevents\r\n   * memory leaks and makes the allocated memory available for\r\n   * Garbage Collection.\r\n   *\r\n   * @param events            List of Interruptive Events to remove\r\n   * @param listenerTarget    Target to attach the listener on\r\n   * @param handler           Handler for when the listener fires\r\n   * @returns                 Void\r\n   */\r\n  private _removeInterruptiveEventListeners(\r\n    events: string[],\r\n    listenerTarget: ScrollToListenerTarget,\r\n    handler: EventListenerOrEventListenerObject): void {\r\n\r\n    if (!listenerTarget) listenerTarget = window;\r\n    events.forEach(event => listenerTarget.removeEventListener(event, handler));\r\n  }\r\n\r\n  /**\r\n   * Find the first scrollable parent Node of a given\r\n   * Element. The DOM Tree gets searched upwards\r\n   * to find this first scrollable parent. Parents might\r\n   * be ignored by CSS styles applied to the HTML Element.\r\n   *\r\n   * @param nativeElement     The Element to search the DOM Tree upwards from\r\n   * @returns                 The first scrollable parent HTML Element\r\n   */\r\n  private _getFirstScrollableParent(nativeElement: HTMLElement): HTMLElement {\r\n\r\n    let style: CSSStyleDeclaration = window.getComputedStyle(nativeElement);\r\n\r\n    const overflowRegex: RegExp = /(auto|scroll|overlay)/;\r\n\r\n    if (style.position === 'fixed') return null;\r\n\r\n    for (let parent = nativeElement; parent = parent.parentElement; null) {\r\n\r\n      style = window.getComputedStyle(parent);\r\n\r\n      if (style.position === 'absolute'\r\n        || style.overflow === 'hidden'\r\n        || style.overflowY === 'hidden') continue;\r\n\r\n      if (overflowRegex.test(style.overflow + style.overflowY)\r\n        || parent.tagName === 'BODY') return parent;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get the Target Node to scroll to.\r\n   *\r\n   * @param id              The given ID of the node, either a string or\r\n   *                        an element reference\r\n   * @param allowBodyTag    Indicate whether or not the Document Body is\r\n   *                        considered a valid Target Node\r\n   * @returns               The Target Node to scroll to\r\n   */\r\n  private _getNode(id: ScrollToTarget, allowBodyTag: boolean = false): HTMLElement {\r\n\r\n    let targetNode: HTMLElement;\r\n\r\n    if (isString(id)) {\r\n      if (allowBodyTag && (id === 'body' || id === 'BODY')) {\r\n        targetNode = this._document.body;\r\n      } else {\r\n        targetNode = this._document.getElementById(stripHash(id));\r\n      }\r\n    } else if (isNumber(id)) {\r\n      targetNode = this._document.getElementById(String(id));\r\n    } else if (isElementRef(id)) {\r\n      targetNode = id.nativeElement;\r\n    } else if (isNativeElement(id)) {\r\n      targetNode = id;\r\n    }\r\n\r\n    return targetNode;\r\n  }\r\n\r\n  /**\r\n   * Retrieve the Listener target. This Listener Target is used\r\n   * to attach Event Listeners on. In case of the target being\r\n   * the Document Body, we need the actual `window` to listen\r\n   * for events.\r\n   *\r\n   * @param container           The HTML Container element\r\n   * @returns                   The Listener Target to attach events on\r\n   */\r\n  private _getListenerTarget(container: HTMLElement): ScrollToListenerTarget {\r\n    if (!container) return null;\r\n    return this._isDocumentBody(container) ? window : container;\r\n  }\r\n\r\n  /**\r\n   * Test if a given HTML Element is the Document Body.\r\n   *\r\n   * @param element             The given HTML Element\r\n   * @returns                   Whether or not the Element is the\r\n   *                            Document Body Element\r\n   */\r\n  private _isDocumentBody(element: HTMLElement): element is HTMLBodyElement {\r\n    return element.tagName.toUpperCase() === 'BODY';\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  ElementRef,\r\n  Renderer2,\r\n  AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport {\r\n  DEFAULTS,\r\n  EVENTS\r\n} from './scroll-to-helpers';\r\nimport {\r\n  ScrollToConfigOptions,\r\n  ScrollToOffsetMap,\r\n  ScrollToTarget\r\n} from './scroll-to-config.interface';\r\nimport {\r\n  ScrollToAnimationEasing\r\n} from './scroll-to-easing.interface';\r\nimport { ScrollToEvent } from './scroll-to-event.interface';\r\nimport { ScrollToService } from './scroll-to.service';\r\n\r\n@Directive({\r\n  selector: '[ngx-scroll-to]'\r\n})\r\nexport class ScrollToDirective implements AfterViewInit {\r\n\r\n  @Input('ngx-scroll-to')\r\n  public ngxScrollTo: ScrollToTarget = DEFAULTS.target;\r\n\r\n  @Input('ngx-scroll-to-event')\r\n  public ngxScrollToEvent: ScrollToEvent = DEFAULTS.action;\r\n\r\n  @Input('ngx-scroll-to-duration')\r\n  public ngxScrollToDuration: number = DEFAULTS.duration;\r\n\r\n  @Input('ngx-scroll-to-easing')\r\n  public ngxScrollToEasing: ScrollToAnimationEasing = DEFAULTS.easing;\r\n\r\n  @Input('ngx-scroll-to-offset')\r\n  public ngxScrollToOffset: number = DEFAULTS.offset;\r\n\r\n  @Input('ngx-scroll-to-offset-map')\r\n  public ngxScrollToOffsetMap: ScrollToOffsetMap = DEFAULTS.offsetMap;\r\n\r\n  private _options: ScrollToConfigOptions;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _scrollToService: ScrollToService,\r\n    private _renderer2: Renderer2) { }\r\n\r\n  /**\r\n   * Angular Lifecycle Hook - After View Init\r\n   *\r\n   * @todo Implement Subscription for Events\r\n   *\r\n   * @returns void\r\n   */\r\n  public ngAfterViewInit(): void {\r\n\r\n    // Test Event Support\r\n    if (EVENTS.indexOf(this.ngxScrollToEvent) === -1) throw new Error(`Unsupported Event '${this.ngxScrollToEvent}'`);\r\n\r\n    // Listen for the trigger...\r\n    this._renderer2.listen(this._elementRef.nativeElement, this.ngxScrollToEvent,\r\n      (event: Event) => {\r\n\r\n        this._options = {\r\n          target: this.ngxScrollTo,\r\n          duration: this.ngxScrollToDuration,\r\n          easing: this.ngxScrollToEasing,\r\n          offset: this.ngxScrollToOffset,\r\n          offsetMap: this.ngxScrollToOffsetMap\r\n        };\r\n\r\n        this._scrollToService.scrollTo(this._options);\r\n      });\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ScrollToDirective } from './scroll-to.directive';\r\nimport { ScrollToService } from './scroll-to.service';\r\n\r\n/** Scroll To Module */\r\n@NgModule({\r\n  declarations: [\r\n    ScrollToDirective\r\n  ],\r\n  exports: [\r\n    ScrollToDirective\r\n  ]\r\n})\r\nexport class ScrollToModule {\r\n\r\n  /**\r\n   * Guaranteed singletons for provided Services across App.\r\n   *\r\n   * @return          An Angular Module with Providers\r\n   */\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: ScrollToModule,\r\n      providers: [\r\n        ScrollToService\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}