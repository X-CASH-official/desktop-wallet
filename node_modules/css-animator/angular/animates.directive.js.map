{"version":3,"sources":["angular/animates.directive.ts"],"names":[],"mappings":"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","file":"animates.directive.js","sourcesContent":["import { Directive, Inject, ElementRef, OnInit } from '@angular/core';\nimport { AnimationService } from './animation.service';\nimport { AnimationBuilder } from '../builder';\nimport { AnimationOptions } from '../contracts';\n\n@Directive({\n  selector: '[animates]',\n  exportAs: 'animates',\n  inputs: [\n    'animates',\n    'animatesOnInit',\n    'animatesInitMode'\n  ]\n})\nexport class AnimatesDirective implements OnInit {\n  private _defaultOptions: AnimationOptions;\n  private _initOptions: AnimationOptions;\n  private _initMode: string;\n\n  private _animationBuilder: AnimationBuilder;\n  private _started: boolean;\n\n  set animates(options: AnimationOptions) {\n    this._defaultOptions = options;\n  }\n\n  set animatesOnInit(options: AnimationOptions) {\n    this._initOptions = options;\n  }\n\n  set animatesInitMode(mode: string) {\n    if (typeof mode === 'string') {\n      this._initMode = mode.toLowerCase();\n    }\n  }\n\n  get animationBuilder(): AnimationBuilder {\n    return this._animationBuilder;\n  }\n\n  constructor( @Inject(ElementRef) private _elementRef: ElementRef, @Inject(AnimationService) animationService: AnimationService) {\n    this._animationBuilder = animationService.builder();\n  }\n\n  public ngOnInit() {\n    if (!this._initOptions) {\n      return;\n    }\n\n    let promise: Promise<HTMLElement>;\n    let builder = this._animationBuilder\n      .setOptions(this._initOptions);\n\n    switch (this._initMode) {\n      case 'show':\n        promise = builder.show(this._elementRef.nativeElement);\n        break;\n      case 'hide':\n        promise = builder.hide(this._elementRef.nativeElement);\n        break;\n      default:\n        promise = builder.animate(this._elementRef.nativeElement);\n    }\n\n    promise.then((element: HTMLElement) => element, (error: string) => {\n      // Animation interrupted\n    });\n  }\n\n  public start(options?: AnimationOptions): Promise<void | HTMLElement> {\n    this._started = true;\n    this.setOptions(options);\n\n    return this._animationBuilder\n      .animate(this._elementRef.nativeElement)\n      .then((element: HTMLElement) => element, (error: string) => {\n        // Animation interrupted\n      });\n  }\n\n  public hide(options?: AnimationOptions): Promise<void | HTMLElement> {\n    this.setOptions(options);\n\n    return this._animationBuilder\n      .setOptions(options)\n      .hide(this._elementRef.nativeElement)\n      .then((element: HTMLElement) => element, (error: string) => {\n        // Animation interrupted\n      });\n  }\n\n  public show(options?: AnimationOptions): Promise<void | HTMLElement> {\n    this.setOptions(options);\n\n    return this._animationBuilder\n      .show(this._elementRef.nativeElement)\n      .then((element: HTMLElement) => element, (error: string) => {\n        // Animation interrupted\n      });\n  }\n\n  public animate(options?: AnimationOptions) {\n    this.setOptions(options);\n\n    return this._animationBuilder\n      .setOptions(this._defaultOptions)\n      .animate(this._elementRef.nativeElement)\n      .then((element: HTMLElement) => element, (error: string) => {\n        // Animation interrupted\n      });\n  }\n\n  public pause() {\n    if (!this._started) return;\n\n    this._animationBuilder\n      .setPlayState('paused')\n      .applyPlayState(this._elementRef.nativeElement);\n  }\n\n  public resume() {\n    if (!this._started) return;\n\n    this._animationBuilder\n      .setPlayState('running')\n      .applyPlayState(this._elementRef.nativeElement);\n  }\n\n  public toggle() {\n    if (!this._started) return;\n\n    this._animationBuilder\n      .setPlayState(this._animationBuilder.playState === 'running' ? 'paused' : 'running')\n      .applyPlayState(this._elementRef.nativeElement);\n  }\n\n  public stop() {\n    this._started = false;\n    this._animationBuilder\n      .stop(this._elementRef.nativeElement)\n      .then((element) => element, (error) => {\n        // Animation interrupted\n      });\n  }\n\n  public startOrStop(options?: AnimationOptions) {\n    if (!this._started) {\n      this.start(options);\n      return;\n    }\n\n    this.stop();\n  }\n\n  private setOptions(options: AnimationOptions) {\n    if (options) {\n      this._animationBuilder.setOptions(options);\n      return;\n    }\n\n    this._animationBuilder.setOptions(this._defaultOptions);\n  }\n\n}\n"]}